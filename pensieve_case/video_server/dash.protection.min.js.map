{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","externals/base64.js","src/core/EventBus.js","src/core/FactoryMaker.js","src/core/events/CoreEvents.js","src/core/events/Events.js","src/core/events/EventsBase.js","src/streaming/protection/CommonEncryption.js","src/streaming/protection/Protection.js","src/streaming/protection/ProtectionEvents.js","src/streaming/protection/controllers/ProtectionController.js","src/streaming/protection/controllers/ProtectionKeyController.js","src/streaming/protection/drm/KeySystemClearKey.js","src/streaming/protection/drm/KeySystemPlayReady.js","src/streaming/protection/drm/KeySystemWidevine.js","src/streaming/protection/models/ProtectionModel_01b.js","src/streaming/protection/models/ProtectionModel_21Jan2015.js","src/streaming/protection/models/ProtectionModel_3Feb2014.js","src/streaming/protection/servers/ClearKey.js","src/streaming/protection/servers/DRMToday.js","src/streaming/protection/servers/PlayReady.js","src/streaming/protection/servers/Widevine.js","src/streaming/protection/vo/ClearKeyKeySet.js","src/streaming/protection/vo/KeyError.js","src/streaming/protection/vo/KeyMessage.js","src/streaming/protection/vo/KeyPair.js","src/streaming/protection/vo/KeySystemAccess.js","src/streaming/protection/vo/KeySystemConfiguration.js","src/streaming/protection/vo/MediaCapability.js","src/streaming/protection/vo/NeedKey.js","src/streaming/utils/ErrorHandler.js","src/streaming/vo/Error.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dashjs","Protection","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","_dereq_","UTF8","encode","s","charCodeAt","push","decode","v","String","fromCharCode","join","BASE64","T","encodeArray","charAt","R","decodeArray","pop","ASCII","Uint8Array","encodeASCII","decodeASCII","EventBus","on","type","listener","scope","priority","arguments","undefined","EVENT_PRIORITY_LOW","getHandlerIdx","handlers","handler","callback","some","item","idx","splice","off","trigger","payload","hasOwnProperty","forEach","index","reset","_FactoryMaker","_interopRequireDefault","EVENT_PRIORITY_HIGH","__dashjs_factory_name","factory","default","getSingletonFactory","FactoryMaker","extend","name","childInstance","override","context","extensionContext","getExtensionContext","instance","getSingletonInstance","className","singletonContexts","obj","setSingletonInstance","getClassFactory","classConstructor","create","merge","apply","getInstance","args","extensionObject","extension","parent","prop","extensions","_EventsBase2","CoreEvents","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","AST_IN_FUTURE","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CHUNK_APPENDED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","WALLCLOCK_TIME_UPDATED","XLINK_ALL_ELEMENTS_LOADED","XLINK_ELEMENT_LOADED","XLINK_READY","_CoreEvents2","Events","events","EventsBase","config","publicOnly","evt","indexOf","_base","CommonEncryption","cpArray","retVal","cp","schemeIdUri","toLowerCase","value","pssh","offset","view","DataView","version","getUint8","getUint32","slice","keySystem","initData","psshList","parsePSSHList","uuid","cpData","__text","buffer","data","dv","done","byteCursor","size","nextBox","systemID","boxStart","byteLength","val","toString","createProtectionSystem","controller","protectionKeyController","_ProtectionKeyController","setConfig","log","initialize","protectionModel","getProtectionModel","_ProtectionController","adapter","eventBus","capabilities","setEncryptedMediaSupported","videoElement","videoModel","getElement","onencrypted","mediaKeys","navigator","requestMediaKeySystemAccess","_ProtectionModel_21Jan","getAPI","APIS_ProtectionModel_3Feb2014","_ProtectionModel_3Feb","api","APIS_ProtectionModel_01b","_ProtectionModel_01b","apis","Object","keys","_ProtectionEvents","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","setMediaKeys","MediaKeys","release","error","message","ready","close","ProtectionEvents","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_SYSTEM_SELECTED","KEY_ADDED","KEY_ERROR","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_CREATED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","KEY_SYSTEM_SELECTED","LICENSE_REQUEST_COMPLETE","NEED_KEY","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","protectionEvents","ProtectionController","setup","keySystems","getKeySystems","pendingNeedKeyData","initialized","sessionType","robustnessLevel","_Events","_Protection","manifest","aInfo","vInfo","streamInfo","getStreamsInfo","audioInfo","getMediaInfoForType","videoInfo","mediaInfo","supportedKS","getSupportedKeySystemsFromContentProtection","contentProtection","selectKeySystem","createKeySession","initDataForKS","_CommonEncryption","getPSSHForKeySystem","currentInitData","getAllInitData","initDataEquals","systemString","loadKeySession","sessionID","removeKeySession","sessionToken","closeKeySession","setServerCertificate","serverCertificate","setMediaElement","element","onNeedKey","onKeyMessage","setSessionType","setRobustnessLevel","level","setProtectionData","protDataSet","getProtData","protData","keySystemString","fromManifest","audioCapabilities","videoCapabilities","_MediaCapability","codec","ksIdx","ksConfig","_KeySystemConfiguration","requestedKeySystems","ks","_ret","configs","onKeySystemAccessComplete","event","requestKeySystemAccess","keySystemAccess","onKeySystemSelected","getKeySystem","sendLicenseRequestCompleteEvent","keyMessage","messageType","licenseServerData","getLicenseServer","eventData","getSessionID","isClearKey","clearkeys","processClearKeyLicenseRequest","updateKeySession","xhr","XMLHttpRequest","url","serverURL","_typeof","laURL","getLicenseServerURLFromInitData","getPSSHData","getServerURLFromMessage","open","getHTTPMethod","responseType","getResponseType","onload","status","getLicenseMessage","response","statusText","readyState","getErrorResponse","onabort","onerror","updateHeaders","headers","key","withCredentials","setRequestHeader","httpRequestHeaders","getRequestHeadersFromMessage","send","getLicenseRequestFromMessage","initDataType","abInitData","ArrayBuffer","isView","getSupportedKeySystems","ProtectionKeyController","_KeySystemPlayReady","_KeySystemWidevine","_KeySystemClearKey","clearkeyKeySystem","getKeySystemBySystemString","initData1","initData2","data1","data2","j","cps","cpIdx","schemeIdURI","getInitData","shouldNotFilterOutKeySystem","_DRMToday","_Widevine","_PlayReady","_ClearKey","getClearKeysFromProtectionData","KeySystemClearKey","protectionData","clearkeySet","jsonMsg","JSON","parse","keyPairs","kids","clearkeyID","clearkey","_KeyPair","_ClearKeyKeySet","parseInitDataFromContentProtection","KeySystemPlayReady","msg","xmlDoc","parser","DOMParser","dataview","messageFormat","Uint16Array","parseFromString","headerNameList","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","licenseRequest","Challenge","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","set","setPlayReadyMessageFormat","format","_Error","KeySystemWidevine","ProtectionModel_01b","pendingSessions","sessions","errHandler","_ErrorHandler","eventHandler","createEventHandler","removeEventListeners","_i","ksConfigurations","ve","document","createElement","found","supportedAudio","supportedVideo","configIdx","videos","videoIdx","canPlayType","contentType","_KeySystemAccess","mediaElement","addEventListener","moreSessionsAllowed","newSession","getExpirationTime","NaN","getSessionType","keyID","handleEvent","_NeedKey","findSessionByID","sessionId","errorCode","systemCode","_KeyError","shift","mediaKeyMessageError","_KeyMessage","defaultURL","sessionArray","len","removeEventListener","ProtectionModel_21Jan2015","session","numSessions","removeSession","then","closed","closeKeySessionInternal","catch","requestKeySystemAccessInternal","mksa","createMediaKeys","mkeys","createSession","createSessionToken","generateRequest","toJWK","update","load","success","remove","mediaKeySystemAccess","configuration","getConfiguration","token","expiration","getKeyStatuses","keyStatuses","ProtectionModel_3Feb2014","audios","audioIdx","isTypeSupported","ksAccess","ksConfiguration","boundDoSetKeys","doSetKeys","bind","keySession","destinationURL","ClearKey","substring","serverResponse","keypair","keyid","kid","replace","k","DRMToday","keySystemStr","com.widevine.alpha","license","com.microsoft.playready","PlayReady","Widevine","ClearKeyKeySet","numKeys","jwk","kty","alg","jwkString","stringify","buf","bView","KeyError","errorString","KeyMessage","KeyPair","KeySystemAccess","KeySystemConfiguration","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","MediaCapability","robustness","NeedKey","ErrorHandler","capabilityError","err","ERROR","downloadError","id","request","manifestError","timedTextError","ccContent","cc","mediaSourceError","mediaKeySessionError","_EventBus","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_MANIFEST","DOWNLOAD_ERROR_ID_SIDX","DOWNLOAD_ERROR_ID_CONTENT","DOWNLOAD_ERROR_ID_INITIALIZATION","DOWNLOAD_ERROR_ID_XLINK","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE"],"mappings":"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","file":"dash.protection.min.js","sourceRoot":"./src/","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope: scope,\n            priority: priority\n        };\n\n        const inserted = handlers[type].some((item , idx) => {\n            if (priority > item.priority ) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) return;\n        handlers[type].splice(idx, 1);\n    }\n\n    function trigger(type, payload) {\n        if (!type || !handlers[type]) return;\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\n\n        payload.type = type;\n\n        handlers[type].forEach( handler => handler.callback.call(handler.scope, payload) );\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) return idx;\n\n        handlers[type].some( (item, index) => {\n            if (item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.AST_IN_FUTURE = 'astinfuture';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CHUNK_APPENDED = 'chunkAppended';\n        this.CURRENT_TRACK_CHANGED = 'currenttrackchanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ALL_ELEMENTS_LOADED = 'xlinkAllElementsLoaded';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BASE64 from '../../../externals/base64';\n\nclass CommonEncryption {\n    /**\n     * Find and return the ContentProtection element in the given array\n     * that indicates support for MPEG Common Encryption\n     *\n     * @param {Array} cpArray array of content protection elements\n     * @returns {Object|null} the Common Encryption content protection element or\n     * null if one was not found\n     */\n    static findCencContentProtection(cpArray) {\n        var retVal = null;\n        for (var i = 0; i < cpArray.length; ++i) {\n            var cp = cpArray[i];\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\n                    cp.value.toLowerCase() === 'cenc')\n                retVal = cp;\n        }\n        return retVal;\n    }\n\n    /**\n     * Returns just the data portion of a single PSSH\n     *\n     * @param {ArrayBuffer} pssh - the PSSH\n     * @return {ArrayBuffer} data portion of the PSSH\n     */\n    static getPSSHData(pssh) {\n        var offset = 8; // Box size and type fields\n        var view = new DataView(pssh);\n\n        // Read version\n        var version = view.getUint8(offset);\n\n        offset += 20; // Version (1), flags (3), system ID (16)\n\n        if (version > 0) {\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\n        }\n\n        offset += 4; // Data size\n        return pssh.slice(offset);\n    }\n\n    /**\n     * Returns the PSSH associated with the given key system from the concatenated\n     * list of PSSH boxes in the given initData\n     *\n     * @param {KeySystem} keySystem the desired\n     * key system\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\n     * or null if a valid association could not be found.\n     */\n    static getPSSHForKeySystem(keySystem, initData) {\n        var psshList = CommonEncryption.parsePSSHList(initData);\n        if (psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\n            return psshList[keySystem.uuid.toLowerCase()];\n        }\n        return null;\n    }\n\n    /**\n     * Parse a standard common encryption PSSH which contains a simple\n     * base64-encoding of the init data\n     *\n     * @param {Object} cpData the ContentProtection element\n     * @returns {ArrayBuffer|null} the init data or null if not found\n     */\n    static parseInitDataFromContentProtection(cpData) {\n        if ('pssh' in cpData) {\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\n        }\n        return null;\n    }\n\n    /**\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\n     *\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\n     * CDM as initialization data when CommonEncryption content is detected\n     * @returns {Object|Array} an object that has a property named according to each of\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n     * and a ArrayBuffer (the entire PSSH box) as the property value\n     */\n    static parsePSSHList(data) {\n\n        if (data === null)\n            return [];\n\n        var dv = new DataView(data);\n        var done = false;\n        var pssh = {};\n\n        // TODO: Need to check every data read for end of buffer\n        var byteCursor = 0;\n        while (!done) {\n\n            var size,\n                nextBox,\n                version,\n                systemID,\n                psshDataSize;\n            var boxStart = byteCursor;\n\n            if (byteCursor >= dv.buffer.byteLength)\n                break;\n\n            /* Box size */\n            size = dv.getUint32(byteCursor);\n            nextBox = byteCursor + size;\n            byteCursor += 4;\n\n            /* Verify PSSH */\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor += 4;\n\n            /* Version must be 0 or 1 */\n            version = dv.getUint8(byteCursor);\n            if (version !== 0 && version !== 1) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor++;\n\n            byteCursor += 3; /* skip flags */\n\n            // 16-byte UUID/SystemID\n            systemID = '';\n            var i, val;\n            for (i = 0; i < 4; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 4;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 6; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 6;\n\n            systemID = systemID.toLowerCase();\n\n            /* PSSH Data Size */\n            psshDataSize = dv.getUint32(byteCursor);\n            byteCursor += 4;\n\n            /* PSSH Data */\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\n            byteCursor = nextBox;\n        }\n\n        return pssh;\n    }\n}\n\nexport default CommonEncryption;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n\n    let instance;\n    let context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n\n        let controller = null;\n\n        let protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({log: config.log,});\n        protectionKeyController.initialize();\n\n        let protectionModel =  getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                adapter: config.adapter,\n                eventBus: config.eventBus,\n                log: config.log\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function getProtectionModel(config) {\n\n        let log = config.log;\n        let eventBus = config.eventBus;\n        let videoElement = config.videoModel.getElement();\n\n        if (videoElement.onencrypted !== undefined &&\n            videoElement.mediaKeys !== undefined &&\n            navigator.requestMediaKeySystemAccess !== undefined &&\n            typeof navigator.requestMediaKeySystemAccess === 'function') {\n\n            log('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({log: log, eventBus: eventBus});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n\n            log('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n\n            log('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_01b)});\n\n        } else {\n\n            log('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n\n        }\n    }\n\n    function getAPI(videoElement, apis) {\n\n        for (var i = 0; i < apis.length; i++) {\n            var api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem: createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nlet factory = FactoryMaker.getClassFactory(Protection);\nfactory.events = ProtectionEvents;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n/**\n * @class\n *\n */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events\n     */\n    constructor () {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @ignore\n         */\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @ignore\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from '../CommonEncryption';\nimport Events from '../../../core/events/Events';\nimport MediaCapability from '../vo/MediaCapability';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Protection from '../Protection';\n\n/**\n * @module ProtectionController\n * @description Provides access to media protection information and functionality.  Each\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\n * which encapsulates a set of protection information (EME APIs, selected key system,\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\n * functionality provided in {@link ProtectionKeyController}.\n * @todo ProtectionController does almost all of its tasks automatically after init() is\n * called.  Applications might want more control over this process and want to go through\n * each step manually (key system selection, session creation, session maintenance).\n * @param {Object} config\n */\n\nfunction ProtectionController(config) {\n\n    let protectionKeyController = config.protectionKeyController;\n    let protectionModel = config.protectionModel;\n    let adapter = config.adapter;\n    let eventBus = config.eventBus;\n    let log = config.log;\n\n    let instance,\n        keySystems,\n        pendingNeedKeyData,\n        audioInfo,\n        videoInfo,\n        protDataSet,\n        initialized,\n        sessionType,\n        robustnessLevel,\n        keySystem;\n\n    function setup() {\n        keySystems = protectionKeyController.getKeySystems();\n        pendingNeedKeyData = [];\n        initialized = false;\n        sessionType = 'temporary';\n        robustnessLevel = '';\n\n        Events.extend(Protection.events);\n    }\n\n    /**\n     * Initialize this protection system with a given manifest and optional audio\n     * and video stream information.\n     *\n     * @param {Object} manifest the json version of the manifest XML document for the\n     * desired content.  Applications can download their manifest using\n     * {@link module:MediaPlayer#retrieveManifest}\n     * @param {StreamInfo} [aInfo] audio stream information\n     * @param {StreamInfo} [vInfo] video stream information\n     * @memberof module:ProtectionController\n     * @instance\n     * @todo This API will change when we have better support for allowing applications\n     * to select different adaptation sets for playback.  Right now it is clunky for\n     * applications to create {@link StreamInfo} with the right information,\n     */\n    function initialize(manifest, aInfo, vInfo) {\n\n        // TODO: We really need to do much more here... We need to be smarter about knowing\n        // which adaptation sets for which we have initialized, including the default key ID\n        // value from the ContentProtection elements so we know whether or not we still need to\n        // select key systems and acquire keys.\n        if (!initialized) {\n\n            var streamInfo;\n\n            if (!aInfo && !vInfo) {\n                // Look for ContentProtection elements.  InitData can be provided by either the\n                // dash264drm:Pssh ContentProtection format or a DRM-specific format.\n                streamInfo = adapter.getStreamsInfo(manifest)[0]; // TODO: Single period only for now. See TODO above\n            }\n\n            audioInfo = aInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'audio') : null);\n            videoInfo = vInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'video') : null);\n\n            var mediaInfo = (videoInfo) ? videoInfo : audioInfo; // We could have audio or video only\n\n            // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\n            // and video will be the same.  Just use one valid MediaInfo object\n            var supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\n            if (supportedKS && supportedKS.length > 0) {\n                selectKeySystem(supportedKS, true);\n            }\n\n            initialized = true;\n        }\n    }\n\n    /**\n     * Create a new key session associated with the given initialization data from\n     * the MPD or from the PSSH box in the media\n     *\n     * @param {ArrayBuffer} initData the initialization data\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\n     * to come up to speed with the latest EME standard\n     */\n    function createKeySession(initData) {\n        var initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\n        if (initDataForKS) {\n\n            // Check for duplicate initData\n            var currentInitData = protectionModel.getAllInitData();\n            for (var i = 0; i < currentInitData.length; i++) {\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\n                    log('DRM: Ignoring initData because we have already seen it!');\n                    return;\n                }\n            }\n            try {\n                protectionModel.createKeySession(initDataForKS, sessionType);\n            } catch (error) {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error creating key session! ' + error.message});\n            }\n        } else {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Selected key system is ' + keySystem.systemString + '.  needkey/encrypted event contains no initData corresponding to that key system!'});\n        }\n    }\n\n    /**\n     * Loads a key session with the given session ID from persistent storage.  This\n     * essentially creates a new key session\n     *\n     * @param {string} sessionID\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     */\n    function loadKeySession(sessionID) {\n        protectionModel.loadKeySession(sessionID);\n    }\n\n    /**\n     * Removes the given key session from persistent storage and closes the session\n     * as if {@link ProtectionController#closeKeySession}\n     * was called\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionRemoved\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function removeKeySession(sessionToken) {\n        protectionModel.removeKeySession(sessionToken);\n    }\n\n    /**\n     * Closes the key session and releases all associated decryption keys.  These\n     * keys will no longer be available for decrypting media\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function closeKeySession(sessionToken) {\n        protectionModel.closeKeySession(sessionToken);\n    }\n\n    /**\n     * Sets a server certificate for use by the CDM when signing key messages\n     * intended for a particular license server.  This will fire\n     * an error event if a key system has not yet been selected.\n     *\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\n     * certificate\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#ServerCertificateUpdated\n     */\n    function setServerCertificate(serverCertificate) {\n        protectionModel.setServerCertificate(serverCertificate);\n    }\n\n    /**\n     * Associate this protection system with the given HTMLMediaElement.  This\n     * causes the system to register for needkey/encrypted events from the given\n     * element and provides a destination for setting of MediaKeys\n     *\n     * @param {HTMLMediaElement} element the media element to which the protection\n     * system should be associated\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setMediaElement(element) {\n        if (element) {\n            protectionModel.setMediaElement(element);\n            eventBus.on(Events.NEED_KEY, onNeedKey, this);\n            eventBus.on(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        } else if (element === null) {\n            protectionModel.setMediaElement(element);\n            eventBus.off(Events.NEED_KEY, onNeedKey, this);\n            eventBus.off(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        }\n    }\n\n    /**\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\n     * \"persistent-license\".  Default is \"temporary\".\n     *\n     * @param {string} value the session type\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setSessionType(value) {\n        sessionType = value;\n    }\n\n    /**\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\n     *\n     * @param {string} level the robustness level\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setRobustnessLevel(level) {\n        robustnessLevel = level;\n    }\n\n    /**\n     * Attach KeySystem-specific data to use for license acquisition with EME\n     *\n     * @param {Object} data an object containing property names corresponding to\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\n     * being instances of {@link ProtectionData}\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setProtectionData(data) {\n        protDataSet = data;\n    }\n\n    /**\n     * Destroys all protection data associated with this protection set.  This includes\n     * deleting all key sessions.  In the case of persistent key sessions, the sessions\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\n     * associated with a HTMLMediaElement, it will be detached from that element.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function reset() {\n        setMediaElement(null);\n\n        keySystem = undefined;//TODO-Refactor look at why undefined is needed for this. refactor\n\n        if (protectionModel) {\n            protectionModel.reset();\n            protectionModel = null;\n        }\n    }\n\n    ///////////////\n    // Private\n    ///////////////\n\n    function getProtData(keySystem) {\n        var protData = null;\n        var keySystemString = keySystem.systemString;\n\n        if (protDataSet) {\n            protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\n        }\n        return protData;\n    }\n\n    function selectKeySystem(supportedKS, fromManifest) {\n\n        var self = this;\n\n        // Build our request object for requestKeySystemAccess\n        var audioCapabilities = [];\n        var videoCapabilities = [];\n\n        if (videoInfo) {\n            videoCapabilities.push(new MediaCapability(videoInfo.codec, robustnessLevel));\n        }\n        if (audioInfo) {\n            audioCapabilities.push(new MediaCapability(audioInfo.codec, robustnessLevel));\n        }\n        var ksConfig = new KeySystemConfiguration(\n                audioCapabilities, videoCapabilities, 'optional',\n                (sessionType === 'temporary') ? 'optional' : 'required',\n                [sessionType]);\n        var requestedKeySystems = [];\n\n        var ksIdx;\n        if (keySystem) {\n            // We have a key system\n            for (ksIdx = 0; ksIdx < supportedKS.length; ksIdx++) {\n                if (keySystem === supportedKS[ksIdx].ks) {\n\n                    requestedKeySystems.push({ks: supportedKS[ksIdx].ks, configs: [ksConfig]});\n\n                    // Ensure that we would be granted key system access using the key\n                    // system and codec information\n                    let onKeySystemAccessComplete = function (event) {\n                        eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                        if (event.error) {\n                            if (!fromManifest) {\n                                eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                            }\n                        } else {\n                            log('DRM: KeySystem Access Granted');\n                            eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: event.data});\n                            createKeySession(supportedKS[ksIdx].initData);\n                        }\n                    };\n                    eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                    protectionModel.requestKeySystemAccess(requestedKeySystems);\n                    break;\n                }\n            }\n        }\n        else if (keySystem === undefined) {\n            // First time through, so we need to select a key system\n            keySystem = null;\n            pendingNeedKeyData.push(supportedKS);\n\n            // Add all key systems to our request list since we have yet to select a key system\n            for (var i = 0; i < supportedKS.length; i++) {\n                requestedKeySystems.push({ks: supportedKS[i].ks, configs: [ksConfig]});\n            }\n\n            var keySystemAccess;\n            var onKeySystemAccessComplete = function (event) {\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (event.error) {\n                    keySystem = undefined;\n                    eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                    }\n                } else {\n                    keySystemAccess = event.data;\n                    log('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\n                    protectionModel.selectKeySystem(keySystemAccess);\n                }\n            };\n            var onKeySystemSelected = function (event) {\n                eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (!event.error) {\n                    keySystem = protectionModel.getKeySystem();\n                    eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: keySystemAccess});\n                    for (var i = 0; i < pendingNeedKeyData.length; i++) {\n                        for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\n                            if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData);\n                                break;\n                            }\n                        }\n                    }\n                } else {\n                    keySystem = undefined;\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: Error selecting key system! -- ' + event.error});\n                    }\n                }\n            };\n            eventBus.on(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n            eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n            protectionModel.requestKeySystemAccess(requestedKeySystems);\n        } else {\n            // We are in the process of selecting a key system, so just save the data\n            pendingNeedKeyData.push(supportedKS);\n        }\n    }\n\n    function sendLicenseRequestCompleteEvent(data, error) {\n        eventBus.trigger(Events.LICENSE_REQUEST_COMPLETE, {data: data, error: error});\n    }\n\n    function onKeyMessage(e) {\n        log('DRM: onKeyMessage');\n        if (e.error) {\n            log(e.error);\n            return;\n        }\n\n        // Dispatch event to applications indicating we received a key message\n        var keyMessage = e.data;\n        eventBus.trigger(Events.KEY_MESSAGE, {data: keyMessage});\n        var messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        var message = keyMessage.message;\n        var sessionToken = keyMessage.sessionToken;\n        var protData = getProtData(keySystem);\n        var keySystemString = keySystem.systemString;\n        var licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\n        var eventData = { sessionToken: sessionToken, messageType: messageType };\n\n        // Message not destined for license server\n        if (!licenseServerData) {\n            log('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\n            sendLicenseRequestCompleteEvent(eventData);\n            return;\n        }\n\n        // Perform any special handling for ClearKey\n        if (protectionKeyController.isClearKey(keySystem)) {\n            var clearkeys = protectionKeyController.processClearKeyLicenseRequest(protData, message);\n            if (clearkeys)  {\n                log('DRM: ClearKey license request handled by application!');\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken, clearkeys);\n                return;\n            }\n        }\n\n        // All remaining key system scenarios require a request to a remote license server\n        var xhr = new XMLHttpRequest();\n\n        // Determine license server URL\n        var url = null;\n        if (protData) {\n            if (protData.serverURL) {\n                var serverURL = protData.serverURL;\n                if (typeof serverURL === 'string' && serverURL !== '') {\n                    url = serverURL;\n                } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\n                    url = serverURL[messageType];\n                }\n            } else if (protData.laURL && protData.laURL !== '') { // TODO: Deprecated!\n                url = protData.laURL;\n            }\n        } else {\n            url = keySystem.getLicenseServerURLFromInitData(CommonEncryption.getPSSHData(sessionToken.initData));\n            if (!url) {\n                url = e.data.laURL;\n            }\n        }\n        // Possibly update or override the URL based on the message\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\n\n        // Ensure valid license server URL\n        if (!url) {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: No license server URL specified!');\n            return;\n        }\n\n        xhr.open(licenseServerData.getHTTPMethod(messageType), url, true);\n        xhr.responseType = licenseServerData.getResponseType(keySystemString, messageType);\n        xhr.onload = function () {\n            if (this.status == 200) {\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken,\n                        licenseServerData.getLicenseMessage(this.response, keySystemString, messageType));\n            } else {\n                sendLicenseRequestCompleteEvent(eventData,\n                        'DRM: ' + keySystemString + ' update, XHR status is \"' + this.statusText + '\" (' + this.status +\n                        '), expected to be 200. readyState is ' + this.readyState +\n                        '.  Response is ' + ((this.response) ? licenseServerData.getErrorResponse(this.response, keySystemString, messageType) : 'NONE'));\n            }\n        };\n        xhr.onabort = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR aborted. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n        xhr.onerror = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR error. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n\n        // Set optional XMLHttpRequest headers from protection data and message\n        var updateHeaders = function (headers) {\n            var key;\n            if (headers) {\n                for (key in headers) {\n                    if ('authorization' === key.toLowerCase()) {\n                        xhr.withCredentials = true;\n                    }\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        };\n        if (protData) {\n            updateHeaders(protData.httpRequestHeaders);\n        }\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\n\n        // Set withCredentials property from protData\n        if (protData && protData.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        xhr.send(keySystem.getLicenseRequestFromMessage(message));\n    }\n\n    function onNeedKey(event) {\n        log('DRM: onNeedKey');\n        // Ignore non-cenc initData\n        if (event.key.initDataType !== 'cenc') {\n            log('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\n            return;\n        }\n\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\n        // Convert to ArrayBuffer\n        var abInitData = event.key.initData;\n        if (ArrayBuffer.isView(abInitData)) {\n            abInitData = abInitData.buffer;\n        }\n\n        log('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\n\n        var supportedKS = protectionKeyController.getSupportedKeySystems(abInitData, protDataSet);\n        if (supportedKS.length === 0) {\n            log('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\n            return;\n        }\n\n        selectKeySystem(supportedKS, false);\n    }\n\n    instance = {\n        initialize: initialize,\n        createKeySession: createKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        setMediaElement: setMediaElement,\n        setSessionType: setSessionType,\n        setRobustnessLevel: setRobustnessLevel,\n        setProtectionData: setProtectionData,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nProtectionController.__dashjs_factory_name = 'ProtectionController';\nexport default FactoryMaker.getClassFactory(ProtectionController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from './../CommonEncryption';\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\nimport DRMToday from './../servers/DRMToday';\nimport PlayReady from './../servers/PlayReady';\nimport Widevine from './../servers/Widevine';\nimport ClearKey from './../servers/ClearKey';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\n/**\n * @module ProtectionKeyController\n * @description Media protection key system functionality that can be modified/overridden by applications\n */\nfunction ProtectionKeyController() {\n\n    let context = this.context;\n\n    let instance,\n        log,\n        keySystems,\n        clearkeyKeySystem;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.log) {\n            log = config.log;\n        }\n    }\n\n    function initialize() {\n        keySystems = [];\n\n        var keySystem;\n\n        // PlayReady\n        keySystem = KeySystemPlayReady(context).getInstance();\n        keySystems.push(keySystem);\n\n        // Widevine\n        keySystem = KeySystemWidevine(context).getInstance();\n        keySystems.push(keySystem);\n\n        // ClearKey\n        keySystem = KeySystemClearKey(context).getInstance();\n        keySystems.push(keySystem);\n        clearkeyKeySystem = keySystem;\n    }\n\n    /**\n     * Returns a prioritized list of key systems supported\n     * by this player (not necessarily those supported by the\n     * user agent)\n     *\n     * @returns {Array.<KeySystem>} a prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystems() {\n        return keySystems;\n    }\n\n    /**\n     * Returns the key system associated with the given key system string\n     * name (i.e. 'org.w3.clearkey')\n     *\n     * @param {string} systemString the system string\n     * @returns {KeySystem|null} the key system\n     * or null if no supported key system is associated with the given key\n     * system string\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystemBySystemString(systemString) {\n        for (var i = 0; i < keySystems.length; i++) {\n            if (keySystems[i].systemString === systemString) {\n                return keySystems[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines whether the given key system is ClearKey.  This is\n     * necessary because the EME spec defines ClearKey and its method\n     * for providing keys to the key session; and this method has changed\n     * between the various API versions.  Our EME-specific ProtectionModels\n     * must know if the system is ClearKey so that it can format the keys\n     * according to the particular spec version.\n     *\n     * @param {Object} keySystem the key\n     * @returns {boolean} true if this is the ClearKey key system, false\n     * otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function isClearKey(keySystem) {\n        return (keySystem === clearkeyKeySystem);\n    }\n\n    /**\n     * Check equality of initData array buffers.\n     *\n     * @param {ArrayBuffer} initData1 - first initData\n     * @param {ArrayBuffer} initData2 - second initData\n     * @returns {boolean} true if the initData arrays are equal in size and\n     * contents, false otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function initDataEquals(initData1, initData2) {\n        if (initData1.byteLength === initData2.byteLength) {\n            var data1 = new Uint8Array(initData1);\n            var data2 = new Uint8Array(initData2);\n\n            for (var j = 0; j < data1.length; j++) {\n                if (data1[j] !== data2[j]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        var cp, ks, ksIdx, cpIdx;\n        var supportedKS = [];\n\n        if (cps) {\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n                ks = keySystems[ksIdx];\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\n                    cp = cps[cpIdx];\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\n\n                        // Look for DRM-specific ContentProtection\n                        var initData = ks.getInitData(cp);\n                        if (!!initData) {\n                            supportedKS.push({\n                                ks: keySystems[ksIdx],\n                                initData: initData\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns key systems supported by this player for the given PSSH\n     * initializationData. Only key systems supported by this player\n     * that have protection data present will be returned.  Key systems are returned in priority order\n     * (highest priority first)\n     *\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\n     * supported by the content\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystems(initData, protDataSet) {\n        var ksIdx;\n        var supportedKS = [];\n        var pssh = CommonEncryption.parsePSSHList(initData);\n\n        for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n            var keySystemString = keySystems[ksIdx].systemString;\n            var shouldNotFilterOutKeySystem = (protDataSet) ? keySystemString in protDataSet : true;\n\n            if (keySystems[ksIdx].uuid in pssh && shouldNotFilterOutKeySystem) {\n                supportedKS.push({\n                    ks: keySystems[ksIdx],\n                    initData: pssh[keySystems[ksIdx].uuid]\n                });\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns the license server implementation data that should be used for this request.\n     *\n     * @param {KeySystem} keySystem the key system\n     * associated with this license request\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\n     * request.  Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @returns {LicenseServer|null} the license server\n     * implementation that should be used for this request or null if the player should not\n     * pass messages of the given type to a license server\n     * @memberof module:ProtectionKeyController\n     * @instance\n     *\n     */\n    function getLicenseServer(keySystem, protData, messageType) {\n\n        // Our default server implementations do not do anything with \"license-release\" or\n        // \"individualization-request\" messages, so we just send a success event\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\n            return null;\n        }\n\n        var licenseServerData = null;\n        if (protData && protData.hasOwnProperty('drmtoday')) {\n            licenseServerData = DRMToday(context).getInstance();\n        } else if (keySystem.systemString === 'com.widevine.alpha') {\n            licenseServerData = Widevine(context).getInstance();\n        } else if (keySystem.systemString === 'com.microsoft.playready') {\n            licenseServerData = PlayReady(context).getInstance();\n        } else if (keySystem.systemString === 'org.w3.clearkey') {\n            licenseServerData = ClearKey(context).getInstance();\n        }\n\n        return licenseServerData;\n    }\n\n    /**\n     * Allows application-specific retrieval of ClearKey keys.\n     *\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {ArrayBuffer} message the key message from the CDM\n     * @return {ClearKeyKeySet|null} the clear keys associated with\n     * the request or null if no keys can be returned by this function\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function processClearKeyLicenseRequest(protData, message) {\n        try {\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\n        } catch (error) {\n            log('Failed to retrieve clearkeys from ProtectionData');\n            return null;\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        isClearKey: isClearKey,\n        initDataEquals: initDataEquals,\n        getKeySystems: getKeySystems,\n        getKeySystemBySystemString: getKeySystemBySystemString,\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\n        getSupportedKeySystems: getSupportedKeySystems,\n        getLicenseServer: getLicenseServer,\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\nexport default FactoryMaker.getSingletonFactory(ProtectionKeyController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = 'org.w3.clearkey';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey() {\n\n    let instance;\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        var clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            var keyPairs = [];\n            for (var i = 0; i < jsonMsg.kids.length; i++) {\n                var clearkeyID = jsonMsg.kids[i];\n                var clearkey = (protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default FactoryMaker.getSingletonFactory(KeySystemClearKey);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady DRM\n *\n * @class\n * @implements KeySystem\n */\nimport CommonEncryption from '../CommonEncryption';\nimport Error from '../../vo/Error';\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport BASE64 from '../../../../externals/base64';\n\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\nconst systemString = 'com.microsoft.playready';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemPlayReady() {\n\n    let instance;\n    let messageFormat = 'utf16';\n\n    function getRequestHeadersFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var headers = {};\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        var headerNameList = xmlDoc.getElementsByTagName('name');\n        var headerValueList = xmlDoc.getElementsByTagName('value');\n        for (var i = 0; i < headerNameList.length; i++) {\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\n        }\n        // some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\n        // this is NOT w3c conform and license servers may reject the request!\n        // -> rename it to proper w3c definition!\n        if (headers.hasOwnProperty('Content')) {\n            headers['Content-Type'] = headers.Content;\n            delete headers.Content;\n        }\n        return headers;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var licenseRequest = null;\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        if (xmlDoc.getElementsByTagName('Challenge')[0]) {\n            var Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\n            if (Challenge) {\n                licenseRequest = BASE64.decode(Challenge);\n            }\n        }\n        return licenseRequest;\n    }\n\n    function getLicenseServerURLFromInitData(initData) {\n        if (initData) {\n            var data = new DataView(initData);\n            var numRecords = data.getUint16(4, true);\n            var offset = 6;\n            var parser = new DOMParser();\n\n            for (var i = 0; i < numRecords; i++) {\n                // Parse the PlayReady Record header\n                var recordType = data.getUint16(offset, true);\n                offset += 2;\n                var recordLength = data.getUint16(offset, true);\n                offset += 2;\n                if (recordType !== 0x0001) {\n                    offset += recordLength;\n                    continue;\n                }\n\n                var recordData = initData.slice(offset, offset + recordLength);\n                var record = String.fromCharCode.apply(null, new Uint16Array(recordData));\n                var xmlDoc = parser.parseFromString(record, 'application/xml');\n\n                // First try <LA_URL>\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\n                    var laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\n                    if (laurl) {\n                        return laurl;\n                    }\n                }\n\n                // Optionally, try <LUI_URL>\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\n                    var luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\n                    if (luiurl) {\n                        return luiurl;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getInitData(cpData) {\n        // * desc@ getInitData\n        // *   generate PSSH data from PROHeader defined in MPD file\n        // *   PSSH format:\n        // *   size (4)\n        // *   box type(PSSH) (8)\n        // *   Protection SystemID (16)\n        // *   protection system data size (4) - length of decoded PROHeader\n        // *   decoded PROHeader data from MPD file\n        var PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\n        var playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\n\n        var byteCursor = 0;\n        var uint8arraydecodedPROHeader = null;\n\n        var PROSize,\n            PSSHSize,\n            PSSHBoxBuffer,\n            PSSHBox,\n            PSSHData;\n\n        // Handle common encryption PSSH\n        if ('pssh' in cpData) {\n            return CommonEncryption.parseInitDataFromContentProtection(cpData);\n        }\n        // Handle native MS PlayReady ContentProtection elements\n        if ('pro' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\n        }\n        else if ('prheader' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\n        }\n        else {\n            return null;\n        }\n\n        PROSize = uint8arraydecodedPROHeader.length;\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\n\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\n\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\n        PSSHData = new DataView(PSSHBoxBuffer);\n\n        PSSHData.setUint32(byteCursor, PSSHSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(PSSHBoxType, byteCursor);\n        byteCursor += PSSHBoxType.length;\n\n        PSSHBox.set(playreadySystemID, byteCursor);\n        byteCursor += playreadySystemID.length;\n\n        PSSHData.setUint32(byteCursor, PROSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\n        byteCursor += PROSize;\n\n        return PSSHBox.buffer;\n    }\n\n    /**\n     * It seems that some PlayReady implementations return their XML-based CDM\n     * messages using UTF16, while others return them as UTF8.  Use this function\n     * to modify the message format to expect when parsing CDM messages.\n     *\n     * @param {string} format the expected message format.  Either \"utf8\" or \"utf16\".\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\n     */\n    function setPlayReadyMessageFormat(format) {\n        if (format !== 'utf8' && format !== 'utf16') {\n            throw new Error('Illegal PlayReady message format! -- ' + format);\n        }\n        messageFormat = format;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat\n    };\n\n    return instance;\n}\n\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\nexport default FactoryMaker.getSingletonFactory(KeySystemPlayReady);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = 'com.widevine.alpha';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine() {\n\n    let instance;\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default FactoryMaker.getSingletonFactory(KeySystemWidevine);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Initial implementation of EME\n *\n * Implemented by Google Chrome prior to v36\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport ErrorHandler from '../../utils/ErrorHandler';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_01b(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n    let instance,\n        videoElement,\n        keySystem,\n        protectionKeyController,\n        errHandler,\n\n        // With this version of the EME APIs, sessionIDs are not assigned to\n        // sessions until the first key message is received.  We are assuming\n        // that in the case of multiple sessions, key messages will be received\n        // in the order that generateKeyRequest() is called.\n        // Holding spot for newly-created sessions until we determine whether or\n        // not the CDM supports sessionIDs\n        pendingSessions,\n\n        // List of sessions that have been initialized.  Only the first position will\n        // be used in the case that the CDM does not support sessionIDs\n        sessions,\n\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\n        // there is no way for us to differentiate between sessions, therefore\n        // we must only allow a single session.  Once we receive the first key\n        // message we can set this flag to determine if more sessions are allowed\n        moreSessionsAllowed,\n\n        // This is our main event handler for all desired HTMLMediaElement events\n        // related to EME.  These events are translated into our API-independent\n        // versions of the same events\n        eventHandler;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        pendingSessions = [];\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        errHandler = ErrorHandler(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        if (videoElement) {\n            removeEventListeners();\n        }\n        for (var i = 0; i < sessions.length; i++) {\n            closeKeySession(sessions[i]);\n        }\n        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (let i = 0; i < pendingSessions.length; i++) {\n            retVal.push(pendingSessions[i].initData);\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        var ve = videoElement;\n        if (!ve) { // Must have a video element to do this capability tests\n            ve = document.createElement('video');\n        }\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                //var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystem = keySystemAccess.keySystem;\n        eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement) {\n            return;\n        }\n\n        // Replacing the previous element\n        if (videoElement) {\n            removeEventListeners();\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.keyerror, eventHandler);\n            videoElement.addEventListener(api.needkey, eventHandler);\n            videoElement.addEventListener(api.keymessage, eventHandler);\n            videoElement.addEventListener(api.keyadded, eventHandler);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Determine if creating a new session is allowed\n        if (moreSessionsAllowed || sessions.length === 0) {\n\n            var newSession = { // Implements SessionToken\n                sessionID: null,\n                initData: initData,\n                getSessionID: function () {\n                    return this.sessionID;\n                },\n\n                getExpirationTime: function () {\n                    return NaN;\n                },\n\n                getSessionType: function () {\n                    return 'temporary';\n                }\n            };\n            pendingSessions.push(newSession);\n\n            // Send our request to the CDM\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\n\n            return newSession;\n\n        } else {\n            throw new Error('Multiple sessions not allowed!');\n        }\n\n    }\n\n    function updateKeySession(sessionToken, message) {\n        var sessionID = sessionToken.sessionID;\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the CDM\n            videoElement[api.addKey](keySystem.systemString,\n                new Uint8Array(message), sessionToken.initData, sessionID);\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            for (var i = 0; i < message.keyPairs.length; i++) {\n                videoElement[api.addKey](keySystem.systemString,\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\n            }\n        }\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the CDM\n        videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                var sessionToken = null;\n                switch (event.type) {\n\n                    case api.needkey:\n                        var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                        eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        break;\n\n                    case api.keyerror:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            var msg = '';\n                            switch (event.errorCode.code) {\n                                case 1:\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n                                    break;\n                                case 2:\n                                    msg += 'MEDIA_KEYERR_CLIENT - The Key System could not be installed or updated.';\n                                    break;\n                                case 3:\n                                    msg += 'MEDIA_KEYERR_SERVICE - The message passed into update indicated an error from the license service.';\n                                    break;\n                                case 4:\n                                    msg += 'MEDIA_KEYERR_OUTPUT - There is no available output device with the required characteristics for the content protection system.';\n                                    break;\n                                case 5:\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - A hardware configuration change caused a content protection error.';\n                                    break;\n                                case 6:\n                                    msg += 'MEDIA_KEYERR_DOMAIN - An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n                                    break;\n                            }\n                            msg += '  System Code = ' + event.systemCode;\n                            // TODO: Build error string based on key error\n                            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, msg)});\n                        } else {\n                            log('No session token found for key error');\n                        }\n                        break;\n\n                    case api.keyadded:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            log('DRM: Key added.');\n                            eventBus.trigger(Events.KEY_ADDED, {data: sessionToken});//TODO not sure anything is using sessionToken? why there?\n                        } else {\n                            log('No session token found for key added');\n                        }\n                        break;\n\n                    case api.keymessage:\n\n                        // If this CDM does not support session IDs, we will be limited\n                        // to a single session\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\n\n                        // SessionIDs supported\n                        if (moreSessionsAllowed) {\n\n                            // Attempt to find an uninitialized token with this sessionID\n                            sessionToken = findSessionByID(sessions, event.sessionId);\n                            if (!sessionToken && pendingSessions.length > 0) {\n\n                                // This is the first message for our latest session, so set the\n                                // sessionID and add it to our list\n                                sessionToken = pendingSessions.shift();\n                                sessions.push(sessionToken);\n                                sessionToken.sessionID = event.sessionId;\n                            }\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\n\n                            sessionToken = pendingSessions.shift();\n                            sessions.push(sessionToken);\n\n                            if (pendingSessions.length !== 0) {\n                                errHandler.mediaKeyMessageError('Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!');\n                            }\n                        }\n\n                        if (sessionToken) {\n                            var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n\n                            // For ClearKey, the spec mandates that you pass this message to the\n                            // addKey method, so we always save it to the token since there is no\n                            // way to tell which key system is in use\n                            sessionToken.keyMessage = message;\n                            eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(sessionToken, message, event.defaultURL)});\n\n                        } else {\n                            log('No session token found for key message');\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    /**\n     * Helper function to retrieve the stored session token based on a given\n     * sessionID value\n     *\n     * @param {Array} sessionArray - the array of sessions to search\n     * @param {*} sessionID - the sessionID to search for\n     * @returns {*} the session token with the given sessionID\n     */\n    function findSessionByID(sessionArray, sessionID) {\n\n        if (!sessionID || !sessionArray) {\n            return null;\n        } else {\n            var len = sessionArray.length;\n            for (var i = 0; i < len; i++) {\n                if (sessionArray[i].sessionID == sessionID) {\n                    return sessionArray[i];\n                }\n            }\n            return null;\n        }\n    }\n\n    function removeEventListeners() {\n        videoElement.removeEventListener(api.keyerror, eventHandler);\n        videoElement.removeEventListener(api.needkey, eventHandler);\n        videoElement.removeEventListener(api.keymessage, eventHandler);\n        videoElement.removeEventListener(api.keyadded, eventHandler);\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\nexport default FactoryMaker.getClassFactory(ProtectionModel_01b);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n\n    var instance,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        var numSessions = sessions.length;\n        var session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            var done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (var i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        requestKeySystemAccessInternal(ksConfigurations, 0);\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\n            keySystem = keySystemAccess.keySystem;\n            mediaKeys = mkeys;\n            if (videoElement) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n\n        }).catch(function () {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        });\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            videoElement.setMediaKeys(null);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            log('DRM: License server certificate successfully updated.');\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED, {error: 'Error updating server certificate -- ' + error.name});\n        });\n    }\n\n    function createKeySession(initData, sessionType) {\n\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession(sessionType);\n        var sessionToken = createSessionToken(session, initData, sessionType);\n\n        // Generate initial key request\n        session.generateRequest('cenc', initData).then(function () {\n            log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n        }).catch(function (error) {\n            // TODO: Better error string\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error generating key request -- ' + error.name});\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message).catch(function (error) {\n            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, 'Error sending update() message! ' + error.name)});\n        });\n    }\n\n    function loadKeySession(sessionID) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession();\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionID).then(function (success) {\n            if (success) {\n                var sessionToken = createSessionToken(session);\n                log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n            } else {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session! Invalid Session ID (' + sessionID + ')'});\n            }\n        }).catch(function (error) {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session (' + sessionID + ')! ' + error.name});\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        var session = sessionToken.session;\n\n        session.remove().then(function () {\n            log('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\n        }, function (error) {\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\n        });\n    }\n\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\n        (function (i) {\n            var keySystem = ksConfigurations[i].ks;\n            var configs = ksConfigurations[i].configs;\n            navigator.requestMediaKeySystemAccess(keySystem.systemString, configs).then(function (mediaKeySystemAccess) {\n\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\n                var configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                        mediaKeySystemAccess.getConfiguration() : null;\n                var keySystemAccess = new KeySystemAccess(keySystem, configuration);\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\n\n            }).catch(function () {\n                if (++i < ksConfigurations.length) {\n                    requestKeySystemAccessInternal(ksConfigurations, i);\n                } else {\n                    eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied!'});\n                }\n            });\n        })(idx);\n    }\n\n    function closeKeySessionInternal(sessionToken) {\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case 'encrypted':\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, initData, sessionType) {\n\n        var token = { // Implements SessionToken\n            session: session,\n            initData: initData,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(Events.KEY_STATUSES_CHANGED, {data: this});\n                        break;\n\n                    case 'message':\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\n                        break;\n                }\n            },\n\n            getSessionID: function () {\n                return session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getSessionType: function () {\n                return sessionType;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(function () {\n            removeSession(token);\n            log('DRM: Session closed.  SessionID = ' + token.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        setServerCertificate: setServerCertificate,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default FactoryMaker.getClassFactory(ProtectionModel_21Jan2015);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n\n    let instance,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (var i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE, {error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message});\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n\n                // Look for supported audio container/codecs\n                if (audios && audios.length !== 0) {\n                    supportedAudio = []; // Indicates that we have a requested audio config\n                    for (var audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                            supportedAudio.push(audios[audioIdx]);\n                        }\n                    }\n                }\n\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: new KeySystemAccess(ks, ksConfig)});\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(ksAccess) {\n        try {\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n            keySystem = ksAccess.keySystem;\n            keySystemAccess = ksAccess;\n            if (videoElement) {\n                setMediaKeys();\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n        } catch (error) {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        }\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        var capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities !== null && keySystemAccess.ksConfiguration.videoCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities !== null && keySystemAccess.ksConfiguration.audioCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n\n        if (capabilities === null)\n          throw new Error('Can not create sessions for unknown content types.');\n\n        var contentType = capabilities.contentType;\n        var session = mediaKeys.createSession(contentType, new Uint8Array(initData));\n        var sessionToken = createSessionToken(session, initData);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n        eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        var boundDoSetKeys = null;\n        var doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, initData) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            initData: initData,\n\n            getSessionID: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.error:\n                        var errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(Events.KEY_ERROR, { data: new KeyError(this, errorStr) });\n                        break;\n                    case api.message:\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        log('DRM: Key added.');\n                        eventBus.trigger(Events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        log('DRM: Session closed.  SessionID = ' + this.getSessionID());\n                        eventBus.trigger(Events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default FactoryMaker.getClassFactory(ProtectionModel_3Feb2014);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url, message/*, messageType*/) {\n        // Build ClearKey server query string\n        var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n        url += '/?';\n        for (var i = 0; i < jsonMsg.kids.length; i++) {\n            url += jsonMsg.kids[i] + '&';\n        }\n        url = url.substring(0, url.length - 1);\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'GET';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        var keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            var keypair = serverResponse.keys[i];\n            var keyid = keypair.kid.replace(/=/g, '');\n            var key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default FactoryMaker.getSingletonFactory(ClearKey);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport BASE64 from '../../../../externals/base64';\n\nfunction DRMToday() {\n\n    const keySystems = {\n        'com.widevine.alpha': {\n            responseType: 'json',\n            getLicenseMessage: function (response) {\n                return BASE64.decodeArray(response.license);\n            },\n            getErrorResponse: function (response) {\n                return response;\n            }\n        },\n        'com.microsoft.playready': {\n            responseType: 'arraybuffer',\n            getLicenseMessage: function (response) {\n                return response;\n            },\n            getErrorResponse: function (response) {\n                return String.fromCharCode.apply(null, new Uint8Array(response));\n            }\n        }\n    };\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default FactoryMaker.getSingletonFactory(DRMToday);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction PlayReady() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default FactoryMaker.getSingletonFactory(PlayReady);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction Widevine() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nWidevine.__dashjs_factory_name = 'Widevine';\nexport default FactoryMaker.getSingletonFactory(Widevine);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\n *  type\n * @ignore\n */\nclass ClearKeyKeySet {\n    /**\n     * @param {Array.<KeyPair>} keyPairs\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\n     * or 'temporary'.  Can also be null or undefined.\n     * @class\n     * @ignore\n     */\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        var i;\n        var numKeys = this.keyPairs.length;\n        var jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            var key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        var jwkString = JSON.stringify(jwk);\n        var len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        var buf = new ArrayBuffer(len);\n        var bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc EME-independent KeyError\n * @ignore\n */\nclass KeyError {\n    /**\n     * @param {Object} sessionToken the key session to which this error is associated\n     * @param {string} errorString an informational error message\n     * @class\n     * @deprecated Newest versions of EME APIs will not use this error object\n     */\n    constructor(sessionToken, errorString) {\n        this.sessionToken = sessionToken;\n        this.error = errorString;\n    }\n}\n\nexport default KeyError;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc EME-independent KeyMessage\n * @ignore\n */\nclass KeyMessage {\n    /**\n     * @param {SessionToken} sessionToken the session\n     * to which the key message is associated\n     * @param {ArrayBuffer} message the key message\n     * @param {string} defaultURL license acquisition URL provided by the CDM\n     * @param {string} messageType Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @class\n     */\n    constructor(sessionToken, message, defaultURL, messageType) {\n        this.sessionToken = sessionToken;\n        this.message = message;\n        this.defaultURL = defaultURL;\n        this.messageType = messageType ? messageType : 'license-request';\n    }\n}\n\nexport default KeyMessage;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\n * @ignore\n */\nclass KeyPair {\n    /**\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\n     * @class\n     * @ignore\n     */\n    constructor(keyID, key) {\n        this.keyID = keyID;\n        this.key = key;\n    }\n}\n\nexport default KeyPair;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Creates a new key system access token.  Represents a valid key system for\n * given piece of content and key system requirements.  Used to initialize license\n * acquisition operations.\n * @ignore\n */\nclass KeySystemAccess {\n    /**\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\n     * @param {KeySystemConfiguration} ksConfiguration the\n     * subset of configurations passed to the key system access request that are supported\n     * by this user agent\n     * @class\n     * @ignore\n     */\n    constructor(keySystem, ksConfiguration) {\n        this.keySystem = keySystem;\n        this.ksConfiguration = ksConfiguration;\n    }\n}\n\nexport default KeySystemAccess;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Represents a set of configurations that describe the capabilities desired for\n *  support by a given CDM\n * @ignore\n */\nclass KeySystemConfiguration {\n    /**\n     * @param {Array.<MediaCapability>} audioCapabilities array of\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {Array.<MediaCapability>} videoCapabilities array of\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n     * One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {string} persistentState desired support for persistent storage of\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {Array.<string>} sessionTypes List of session types that must\n     * be supported by the key system\n     * @class\n     */\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        this.audioCapabilities = audioCapabilities;\n        this.videoCapabilities = videoCapabilities;\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc A media capability\n * @ignore\n */\nclass MediaCapability {\n    /**\n     * @param {string} contentType MIME type and codecs (RFC6386)\n     * @param {string} robustness\n     * @class\n     * @ignore\n     */\n    constructor(contentType, robustness) {\n        this.contentType = contentType;\n        this.robustness = robustness;\n    }\n}\n\nexport default MediaCapability;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc NeedKey\n * @ignore\n */\nclass NeedKey {\n    /**\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {string} initDataType initialization data type\n     * @class\n     */\n    constructor(initData, initDataType) {\n        this.initData = initData;\n        this.initDataType = initDataType;\n    }\n}\n\nexport default NeedKey;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\n\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\n\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\n\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    // \"mediasource\"|\"mediakeys\"\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\n    function manifestError(message, id, manifest, err) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest, event: err}});\n    }\n\n    // {message: '', id: 'parse', cc: ''}\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\n\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\n\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Error {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default Error;"]}