{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/core/FactoryMaker.js",
    "src/core/events/CoreEvents.js",
    "src/core/events/Events.js",
    "src/core/events/EventsBase.js",
    "src/streaming/MediaPlayerEvents.js",
    "src/streaming/metrics/MetricsReporting.js",
    "src/streaming/metrics/MetricsReportingEvents.js",
    "src/streaming/metrics/controllers/MetricsCollectionController.js",
    "src/streaming/metrics/controllers/MetricsController.js",
    "src/streaming/metrics/controllers/MetricsHandlersController.js",
    "src/streaming/metrics/controllers/RangeController.js",
    "src/streaming/metrics/controllers/ReportingController.js",
    "src/streaming/metrics/metrics/MetricsHandlerFactory.js",
    "src/streaming/metrics/metrics/handlers/BufferLevelHandler.js",
    "src/streaming/metrics/metrics/handlers/DVBErrorsHandler.js",
    "src/streaming/metrics/metrics/handlers/GenericMetricHandler.js",
    "src/streaming/metrics/metrics/handlers/HttpListHandler.js",
    "src/streaming/metrics/reporting/ReportingFactory.js",
    "src/streaming/metrics/reporting/reporters/DVBReporting.js",
    "src/streaming/metrics/utils/DVBErrorsTranslator.js",
    "src/streaming/metrics/utils/HandlerHelpers.js",
    "src/streaming/metrics/utils/ManifestParsing.js",
    "src/streaming/metrics/utils/MetricSerialiser.js",
    "src/streaming/metrics/utils/RNG.js",
    "src/streaming/metrics/vo/DVBErrors.js",
    "src/streaming/metrics/vo/Metrics.js",
    "src/streaming/metrics/vo/Range.js",
    "src/streaming/metrics/vo/Reporting.js",
    "src/streaming/utils/CustomTimeRanges.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.AST_IN_FUTURE = 'astinfuture';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CHUNK_APPENDED = 'chunkAppended';\n        this.CURRENT_TRACK_CHANGED = 'currenttrackchanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ALL_ELEMENTS_LOADED = 'xlinkAllElementsLoaded';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n/**\n * @class\n *\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor () {\n        super();\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferstalled';\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferloaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when {@link module:Debug} log method is called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n        //TODO refactor with internal event\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestloaded';\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricschanged';\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricchanged';\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricadded';\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricupdated';\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'streamswitchcompleted';\n        /**\n         * Triggered when a new period starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'streamswitchstarted';\n\n        /**\n         * Triggered when an ABR up /down switch is initialed; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the stream is setup and ready.\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'alltexttracksadded';\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'texttrackadded';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBErrorsTranslator from './utils/DVBErrorsTranslator';\nimport MetricsReportingEvents from './MetricsReportingEvents';\nimport MetricsCollectionController from './controllers/MetricsCollectionController';\nimport MetricsHandlerFactory from './metrics/MetricsHandlerFactory';\nimport ReportingFactory from './reporting/ReportingFactory';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction MetricsReporting() {\n\n    let context = this.context;\n    let instance;\n\n    let dvbErrorsTranslator;\n\n    /**\n     * Create a MetricsCollectionController, and a DVBErrorsTranslator\n     * @param {Object} config - dependancies from owner\n     * @return {MetricsCollectionController} Metrics Collection Controller\n     */\n    function createMetricsReporting(config) {\n        dvbErrorsTranslator = DVBErrorsTranslator(context).getInstance({\n            eventBus: config.eventBus,\n            metricsModel: config.metricsModel,\n        });\n\n        return MetricsCollectionController(context).create(config);\n    }\n\n    /**\n     * Get the ReportingFactory to allow new reporters to be registered\n     * @return {ReportingFactory} Reporting Factory\n     */\n    function getReportingFactory() {\n        return ReportingFactory(context).getInstance();\n    }\n\n    /**\n     * Get the MetricsHandlerFactory to allow new handlers to be registered\n     * @return {MetricsHandlerFactory} Metrics Handler Factory\n     */\n    function getMetricsHandlerFactory() {\n        return MetricsHandlerFactory(context).getInstance();\n    }\n\n    instance = {\n        createMetricsReporting:     createMetricsReporting,\n        getReportingFactory:        getReportingFactory,\n        getMetricsHandlerFactory:   getMetricsHandlerFactory\n    };\n\n    return instance;\n}\n\nMetricsReporting.__dashjs_factory_name = 'MetricsReporting';\nlet factory = FactoryMaker.getClassFactory(MetricsReporting);\nfactory.events = MetricsReportingEvents;\nexport default factory;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n\nclass MetricsReportingEvents extends EventsBase {\n    constructor () {\n        super();\n\n        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized';\n        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer';\n    }\n}\n\nlet metricsReportingEvents = new MetricsReportingEvents();\nexport default metricsReportingEvents;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricsController from './MetricsController';\nimport ManifestParsing from '../utils/ManifestParsing';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport MetricsReportingEvents from '../MetricsReportingEvents';\nimport Events from '../../../core/events/Events';\n\nfunction MetricsCollectionController(config) {\n\n    let metricsControllers = {};\n\n    let context = this.context;\n    let eventBus = config.eventBus;\n\n    function update(e) {\n        if (e.error) {\n            return;\n        }\n\n        // start by assuming all existing controllers need removing\n        let controllersToRemove = Object.keys(metricsControllers);\n\n        const metrics = ManifestParsing(context).getInstance({\n            dashManifestModel: config.dashManifestModel\n        }).getMetrics(e.manifest);\n\n        metrics.forEach(m => {\n            const key = JSON.stringify(m);\n\n            if (!metricsControllers.hasOwnProperty(key)) {\n                try {\n                    var controller = MetricsController(context).create(config);\n                    controller.initialize(m);\n                    metricsControllers[key] = controller;\n                } catch (e) {\n                    // fail quietly\n                }\n            } else {\n                // we still need this controller - delete from removal list\n                controllersToRemove.splice(key, 1);\n            }\n        });\n\n        // now remove the unwanted controllers\n        controllersToRemove.forEach(c => {\n            metricsControllers[c].reset();\n            delete metricsControllers[c];\n        });\n\n        eventBus.trigger(\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE\n        );\n    }\n\n    function reset() {\n        Object.keys(metricsControllers).forEach(key => {\n            metricsControllers[key].reset();\n        });\n\n        metricsControllers = {};\n    }\n\n    function setup() {\n\n\n        eventBus.on(Events.MANIFEST_UPDATED, update);\n        eventBus.on(Events.STREAM_TEARDOWN_COMPLETE, reset);\n    }\n\n    setup();\n\n    // don't export any actual methods\n    return {};\n}\n\nMetricsCollectionController.__dashjs_factory_name = 'MetricsCollectionController';\nexport default FactoryMaker.getClassFactory(MetricsCollectionController);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport RangeController from './RangeController';\nimport ReportingController from './ReportingController';\nimport MetricsHandlersController from './MetricsHandlersController';\n\nfunction MetricsController(config) {\n\n    let metricsHandlersController,\n        reportingController,\n        rangeController,\n        instance;\n\n    let context = this.context;\n\n    function initialize(metricsEntry) {\n        try {\n            rangeController = RangeController(context).create({\n                mediaElement: config.mediaElement\n            });\n\n            rangeController.initialize(metricsEntry.Range);\n\n            reportingController = ReportingController(context).create({\n                log: config.log\n            });\n\n            reportingController.initialize(metricsEntry.Reporting, rangeController);\n\n            metricsHandlersController = MetricsHandlersController(context).create({\n                log: config.log,\n                eventBus: config.eventBus,\n            });\n\n            metricsHandlersController.initialize(metricsEntry.metrics, reportingController);\n        } catch (e) {\n            reset();\n            throw e;\n        }\n    }\n\n    function reset() {\n        if (metricsHandlersController) {\n            metricsHandlersController.reset();\n        }\n\n        if (reportingController) {\n            reportingController.reset();\n        }\n\n        if (rangeController) {\n            rangeController.reset();\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsController.__dashjs_factory_name = 'MetricsController';\nexport default FactoryMaker.getClassFactory(MetricsController);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricsHandlerFactory from '../metrics/MetricsHandlerFactory';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport MediaPlayerEvents from '../../MediaPlayerEvents';\n\nfunction MetricsHandlersController(config) {\n    let handlers = [];\n\n    let instance;\n    let context = this.context;\n    let eventBus = config.eventBus;\n\n    let metricsHandlerFactory = MetricsHandlerFactory(context).getInstance({\n        log: config.log,\n        eventBus: config.eventBus\n    });\n\n    function handle(e) {\n        handlers.forEach(handler => {\n            handler.handleNewMetric(e.metric, e.value, e.mediaType);\n        });\n    }\n\n    function initialize(metrics, reportingController) {\n        metrics.split(',').forEach(\n            (m, midx, ms) => {\n                var handler;\n\n                // there is a bug in ISO23009-1 where the metrics attribute\n                // is a comma-separated list but HttpList key can contain a\n                // comma enclosed by ().\n                if ((m.indexOf('(') !== -1) && m.indexOf(')') === -1) {\n                    let nextm = ms[midx + 1];\n\n                    if (nextm &&\n                            (nextm.indexOf('(') === -1) &&\n                            (nextm.indexOf(')') !== -1)) {\n                        m += ',' + nextm;\n\n                        // delete the next metric so forEach does not visit.\n                        delete ms[midx + 1];\n                    }\n                }\n\n                handler = metricsHandlerFactory.create(\n                    m,\n                    reportingController\n                );\n\n                if (handler) {\n                    handlers.push(handler);\n                }\n            }\n        );\n\n        eventBus.on(\n            MediaPlayerEvents.METRIC_ADDED,\n            handle,\n            instance\n        );\n\n        eventBus.on(\n            MediaPlayerEvents.METRIC_UPDATED,\n            handle,\n            instance\n        );\n    }\n\n    function reset() {\n        eventBus.off(\n            MediaPlayerEvents.METRIC_ADDED,\n            handle,\n            instance\n        );\n\n        eventBus.off(\n            MediaPlayerEvents.METRIC_UPDATED,\n            handle,\n            instance\n        );\n\n        handlers.forEach(handler => handler.reset());\n\n        handlers = [];\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsHandlersController.__dashjs_factory_name = 'MetricsHandlersController';\nexport default FactoryMaker.getClassFactory(MetricsHandlersController);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport CustomTimeRanges from '../../utils/CustomTimeRanges';\n\nfunction RangeController(config) {\n\n    let useWallClockTime = false;\n    let context = this.context;\n    let instance,\n        ranges;\n\n    let mediaElement = config.mediaElement;\n\n    function initialize(rs) {\n        if (rs && rs.length) {\n            rs.forEach(r => {\n                var start = r.starttime;\n                var end = start + r.duration;\n\n                ranges.add(start, end);\n            });\n\n            useWallClockTime = !!rs[0]._useWallClockTime;\n        }\n    }\n\n    function reset() {\n        ranges.clear();\n    }\n\n    function setup() {\n        ranges = CustomTimeRanges(context).create();\n    }\n\n    function isEnabled() {\n        var numRanges = ranges.length;\n        var time;\n\n        if (!numRanges) {\n            return true;\n        }\n\n        // When not present, DASH Metrics reporting is requested\n        // for the whole duration of the content.\n        time = useWallClockTime ?\n                (new Date().getTime() / 1000) :\n                mediaElement.currentTime;\n\n        for (var i = 0; i < numRanges; i += 1) {\n            let start = ranges.start(i);\n            let end = ranges.end(i);\n\n            if ((start <= time) && (time < end)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset,\n        isEnabled:  isEnabled\n    };\n\n    setup();\n\n    return instance;\n}\n\nRangeController.__dashjs_factory_name = 'RangeController';\nexport default FactoryMaker.getClassFactory(RangeController);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport ReportingFactory from '../reporting/ReportingFactory';\n\nfunction ReportingController(config) {\n\n    let reporters = [];\n    let instance;\n\n    let reportingFactory = ReportingFactory(this.context).getInstance({\n        log: config.log\n    });\n\n    function initialize(reporting, rangeController) {\n        // \"if multiple Reporting elements are present, it is expected that\n        // the client processes one of the recognized reporting schemes.\"\n        // to ignore this, and support multiple Reporting per Metric,\n        // simply change the 'some' below to 'forEach'\n        reporting.some(r => {\n            var reporter = reportingFactory.create(r, rangeController);\n\n            if (reporter) {\n                reporters.push(reporter);\n                return true;\n            }\n        });\n    }\n\n    function reset() {\n        reporters.forEach(r => r.reset());\n        reporters = [];\n    }\n\n    function report(type, vos) {\n        reporters.forEach(r => r.report(type, vos));\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset,\n        report:     report\n    };\n\n    return instance;\n}\n\nReportingController.__dashjs_factory_name = 'ReportingController';\nexport default FactoryMaker.getClassFactory(ReportingController);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport BufferLevel from './handlers/BufferLevelHandler';\nimport DVBErrors from './handlers/DVBErrorsHandler';\nimport HttpList from './handlers/HttpListHandler';\nimport GenericMetricHandler from './handlers/GenericMetricHandler';\n\nfunction MetricsHandlerFactory(config) {\n\n    let instance;\n    let log = config.log;\n\n    // group 1: key, [group 3: n [, group 5: type]]\n    let keyRegex = /([a-zA-Z]*)(\\(([0-9]*)(\\,\\s*([a-zA-Z]*))?\\))?/;\n\n    let context = this.context;\n    let knownFactoryProducts = {\n        BufferLevel:    BufferLevel,\n        DVBErrors:      DVBErrors,\n        HttpList:       HttpList,\n        PlayList:       GenericMetricHandler,\n        RepSwitchList:  GenericMetricHandler,\n        TcpList:        GenericMetricHandler\n    };\n\n    function create(listType, reportingController) {\n        var matches = listType.match(keyRegex);\n        var handler;\n\n        if (!matches) {\n            return;\n        }\n\n        try {\n            handler = knownFactoryProducts[matches[1]](context).create({\n                eventBus: config.eventBus\n            });\n\n            handler.initialize(\n                matches[1],\n                reportingController,\n                matches[3],\n                matches[5]\n            );\n        } catch (e) {\n            handler = null;\n\n            log(`MetricsHandlerFactory: Could not create handler for type ${matches[1]} with args ${matches[3]}, ${matches[5]} (${e.message})`);\n        }\n\n        return handler;\n    }\n\n    function register(key, handler) {\n        knownFactoryProducts[key] = handler;\n    }\n\n    function unregister(key) {\n        delete knownFactoryProducts[key];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nMetricsHandlerFactory.__dashjs_factory_name = 'MetricsHandlerFactory';\nexport default FactoryMaker.getSingletonFactory(MetricsHandlerFactory);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker';\nimport HandlerHelpers from '../../utils/HandlerHelpers';\n\nfunction BufferLevelHandler() {\n\n    let instance,\n        reportingController,\n        n,\n        name,\n        interval,\n        lastReportedTime;\n\n    let context = this.context;\n    let handlerHelpers = HandlerHelpers(context).getInstance();\n\n    let storedVOs = [];\n\n    function getLowestBufferLevelVO() {\n        try {\n            return Object.keys(storedVOs).map(\n                key => storedVOs[key]\n            ).reduce(\n                (a, b) => {\n                    return (a.level < b.level) ? a : b;\n                }\n            );\n        } catch (e) {\n            return;\n        }\n    }\n\n    function intervalCallback() {\n        var vo = getLowestBufferLevelVO();\n\n        if (vo) {\n            if (lastReportedTime !== vo.t) {\n                lastReportedTime = vo.t;\n                reportingController.report(name, vo);\n            }\n        }\n    }\n\n    function initialize(basename, rc, n_ms) {\n        if (rc) {\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n            reportingController = rc;\n            name = handlerHelpers.reconstructFullMetricName(basename, n_ms);\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = 0;\n        reportingController = null;\n        lastReportedTime = null;\n    }\n\n    function handleNewMetric(metric, vo, type) {\n        if (metric === 'BufferLevel') {\n            storedVOs[type] = vo;\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nBufferLevelHandler.__dashjs_factory_name = 'BufferLevelHandler';\nexport default FactoryMaker.getClassFactory(BufferLevelHandler);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker';\nimport MetricsReportingEvents from '../../MetricsReportingEvents';\n\nfunction DVBErrorsHandler(config) {\n\n    let instance,\n        reportingController;\n\n    let eventBus = config.eventBus;\n\n    function onInitialisationComplete() {\n        // we only want to report this once per call to initialize\n        eventBus.off(\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\n            onInitialisationComplete,\n            this\n        );\n\n        // Note: A Player becoming a reporting Player is itself\n        // something which is recorded by the DVBErrors metric.\n        eventBus.trigger(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER\n        );\n    }\n\n    function initialize(unused, rc) {\n        if (rc) {\n            reportingController = rc;\n\n            eventBus.on(\n                MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\n                onInitialisationComplete,\n                this\n            );\n        }\n    }\n\n    function reset() {\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        // simply pass metric straight through\n        if (metric === 'DVBErrors') {\n            if (reportingController) {\n                reportingController.report(metric, vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nexport default FactoryMaker.getClassFactory(DVBErrorsHandler);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker';\n\nfunction GenericMetricHandler() {\n\n    let instance,\n        metricName,\n        reportingController;\n\n    function initialize(name, rc) {\n        metricName = name;\n        reportingController = rc;\n    }\n\n    function reset() {\n        reportingController = null;\n        metricName = undefined;\n    }\n\n    function handleNewMetric(metric, vo) {\n        // simply pass metric straight through\n        if (metric === metricName) {\n            if (reportingController) {\n                reportingController.report(metricName, vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nGenericMetricHandler.__dashjs_factory_name = 'GenericMetricHandler';\nexport default FactoryMaker.getClassFactory(GenericMetricHandler);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker';\nimport HandlerHelpers from '../../utils/HandlerHelpers';\n\nfunction HttpListHandler() {\n\n    let instance,\n        reportingController,\n        n,\n        type,\n        name,\n        interval;\n\n    let storedVos = [];\n\n    let handlerHelpers = HandlerHelpers(this.context).getInstance();\n\n    function intervalCallback() {\n        var vos = storedVos;\n\n        if (vos.length) {\n            if (reportingController) {\n                reportingController.report(name, vos);\n            }\n        }\n\n        storedVos = [];\n    }\n\n    function initialize(basename, rc, n_ms, requestType) {\n        if (rc) {\n\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n\n            reportingController = rc;\n\n            if (requestType && requestType.length) {\n                type = requestType;\n            }\n\n            name = handlerHelpers.reconstructFullMetricName(\n                basename,\n                n_ms,\n                requestType\n            );\n\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = null;\n        type = null;\n        storedVos = [];\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        if (metric === 'HttpList') {\n            if (!type || (type === vo.type)) {\n                storedVos.push(vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nHttpListHandler.__dashjs_factory_name = 'HttpListHandler';\nexport default FactoryMaker.getClassFactory(HttpListHandler);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport DVBReporting from './reporters/DVBReporting';\n\nfunction ReportingFactory(config) {\n\n    let knownReportingSchemeIdUris = {\n        'urn:dvb:dash:reporting:2014': DVBReporting\n    };\n\n    let context = this.context;\n    let log = config.log;\n    let instance;\n\n    function create(entry, rangeController) {\n        var reporting;\n\n        try {\n            reporting = knownReportingSchemeIdUris[entry.schemeIdUri](context).create();\n\n            reporting.initialize(entry, rangeController);\n        } catch (e) {\n            reporting = null;\n\n            log(`ReportingFactory: could not create Reporting with schemeIdUri ${entry.schemeIdUri} (${e.message})`);\n        }\n\n        return reporting;\n    }\n\n    function register(schemeIdUri, moduleName) {\n        knownReportingSchemeIdUris[schemeIdUri] = moduleName;\n    }\n\n    function unregister(schemeIdUri) {\n        delete knownReportingSchemeIdUris[schemeIdUri];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nReportingFactory.__dashjs_factory_name = 'ReportingFactory';\nexport default FactoryMaker.getSingletonFactory(ReportingFactory);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../../core/FactoryMaker';\nimport MetricSerialiser from '../../utils/MetricSerialiser';\nimport RNG from '../../utils/RNG';\n\nfunction DVBReporting() {\n    let instance;\n\n    let context = this.context;\n    let metricSerialiser = MetricSerialiser(context).getInstance();\n    let randomNumberGenerator = RNG(context).getInstance();\n\n    let USE_DRAFT_DVB_SPEC = true;\n    let isReportingPlayer = false;\n    let reportingPlayerStatusDecided = false;\n    let reportingUrl = null;\n    let rangeController = null;\n    let allowPendingRequestsToCompleteOnReset = true;\n    let pendingRequests = [];\n\n    function doGetRequest(url, successCB, failureCB) {\n        var req = new XMLHttpRequest();\n        var oncomplete = function () {\n            var reqIndex = pendingRequests.indexOf(req);\n\n            if (reqIndex === -1) {\n                return;\n            } else {\n                pendingRequests.splice(reqIndex, 1);\n            }\n\n            if ((req.status >= 200) && (req.status < 300)) {\n                if (successCB) {\n                    successCB();\n                }\n            } else {\n                if (failureCB) {\n                    failureCB();\n                }\n            }\n        };\n\n        pendingRequests.push(req);\n\n        try {\n            req.open('GET', url);\n            req.onloadend = oncomplete;\n            req.onerror = oncomplete;\n            req.send();\n        } catch (e) {\n            req.onerror();\n        }\n    }\n\n    function report(type, vos) {\n        if (!Array.isArray(vos)) {\n            vos = [vos];\n        }\n\n        // If the Player is not a reporting Player, then the Player shall\n        // not report any errors.\n        // ... In addition to any time restrictions specified by a Range\n        // element within the Metrics element.\n        if (isReportingPlayer && rangeController.isEnabled()) {\n\n            // This reporting mechanism operates by creating one HTTP GET\n            // request for every entry in the top level list of the metric.\n            vos.forEach(function (vo) {\n                var url = metricSerialiser.serialise(vo);\n\n                // this has been proposed for errata\n                if (USE_DRAFT_DVB_SPEC && (type !== 'DVBErrors')) {\n                    url = `metricname=${type}&${url}`;\n                }\n\n                // Take the value of the @reportingUrl attribute, append a\n                // question mark ('?') character and then append the string\n                // created in the previous step.\n                url = `${reportingUrl}?${url}`;\n\n                // Make an HTTP GET request to the URL contained within the\n                // string created in the previous step.\n                doGetRequest(url, null, function () {\n                    // If the Player is unable to make the report, for\n                    // example because the @reportingUrl is invalid, the\n                    // host cannot be reached, or an HTTP status code other\n                    // than one in the 200 series is received, the Player\n                    // shall cease being a reporting Player for the\n                    // duration of the MPD.\n                    isReportingPlayer = false;\n                });\n            });\n        }\n    }\n\n    function initialize(entry, rc) {\n        var probability;\n\n        rangeController = rc;\n\n        reportingUrl = entry['dvb:reportingUrl'];\n\n        // If a required attribute is missing, the Reporting descriptor may\n        // be ignored by the Player\n        if (!reportingUrl) {\n            throw new Error(\n                'required parameter missing (dvb:reportingUrl)'\n            );\n        }\n\n        // A Player's status, as a reporting Player or not, shall remain\n        // static for the duration of the MPD, regardless of MPD updates.\n        // (i.e. only calling reset (or failure) changes this state)\n        if (!reportingPlayerStatusDecided) {\n            // NOTE: DVB spec has a typo where it incorrectly references the\n            // priority attribute, which should be probability\n            probability = entry['dvb:probability'] || entry['dvb:priority'] || 0;\n            // If the @priority attribute is set to 1000, it shall be a reporting Player.\n            // If the @priority attribute is missing, the Player shall not be a reporting Player.\n            // For any other value of the @probability attribute, it shall decide at random whether to be a\n            // reporting Player, such that the probability of being one is @probability/1000.\n            if (probability && (probability === 1000 || ((probability / 1000) >= randomNumberGenerator.random()))) {\n                isReportingPlayer = true;\n            }\n\n            reportingPlayerStatusDecided = true;\n        }\n    }\n\n    function reset() {\n        if (!allowPendingRequestsToCompleteOnReset) {\n            pendingRequests.forEach(req => req.abort());\n            pendingRequests = [];\n        }\n\n        reportingPlayerStatusDecided = false;\n        isReportingPlayer = false;\n        reportingUrl = null;\n        rangeController = null;\n    }\n\n    instance = {\n        report:     report,\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nDVBReporting.__dashjs_factory_name = 'DVBReporting';\nexport default FactoryMaker.getClassFactory(DVBReporting);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBErrors from '../vo/DVBErrors';\nimport Events from '../../../core/events/Events';\nimport MediaPlayerEvents from '../../MediaPlayerEvents';\nimport MetricsReportingEvents from '../MetricsReportingEvents';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction DVBErrorsTranslator(config) {\n\n    let instance;\n    let eventBus = config.eventBus;\n    let metricModel = config.metricsModel;\n    let mpd;\n\n    function report(vo) {\n        var o = new DVBErrors();\n\n        if (!mpd) {\n            return;\n        }\n\n        for (const key in vo) {\n            if (vo.hasOwnProperty(key)) {\n                o[key] = vo[key];\n            }\n        }\n\n        if (!o.mpdurl) {\n            o.mpdurl = mpd.originalUrl || mpd.url;\n        }\n\n        if (!o.terror) {\n            o.terror = new Date();\n        }\n\n        metricModel.addDVBErrors(o);\n    }\n\n    function onManifestUpdate(e) {\n        if (e.error) {\n            return;\n        }\n\n        mpd = e.manifest;\n    }\n\n    function onServiceLocationChanged(e) {\n        report({\n            errorcode:          DVBErrors.BASE_URL_CHANGED,\n            servicelocation:    e.entry\n        });\n    }\n\n    function onBecameReporter() {\n        report({\n            errorcode: DVBErrors.BECAME_REPORTER\n        });\n    }\n\n    function handleHttpMetric(vo) {\n        if ((vo.responsecode === 0) ||      // connection failure - unknown\n                (vo.responsecode >= 400) || // HTTP error status code\n                (vo.responsecode < 100) ||  // unknown status codes\n                (vo.responsecode >= 600)) { // unknown status codes\n            report({\n                errorcode:          vo.responsecode || DVBErrors.CONNECTION_ERROR,\n                url:                vo.url,\n                terror:             vo.tresponse,\n                servicelocation:    vo._serviceLocation\n            });\n        }\n    }\n\n    function onMetricEvent(e) {\n        switch (e.metric) {\n        case 'HttpList':\n            handleHttpMetric(e.value);\n            break;\n        default:\n            break;\n        }\n    }\n\n    function onPlaybackError(e) {\n        var reason = e.error ? e.error.code : 0;\n        var errorcode;\n\n        switch (reason) {\n            case MediaError.MEDIA_ERR_NETWORK:\n                errorcode = DVBErrors.CONNECTION_ERROR;\n                break;\n            case MediaError.MEDIA_ERR_DECODE:\n                errorcode = DVBErrors.CORRUPT_MEDIA_OTHER;\n                break;\n            default:\n                return;\n        }\n\n        report({\n            errorcode: errorcode\n        });\n    }\n\n    function initialise() {\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.on(\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.on(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    function reset() {\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.off(\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.off(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    instance = {\n        initialise: initialise,\n        reset:      reset\n    };\n\n    initialise();\n\n    return instance;\n}\n\nDVBErrorsTranslator.__dashjs_factory_name = 'DVBErrorsTranslator';\nexport default FactoryMaker.getSingletonFactory(DVBErrorsTranslator);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction HandlerHelpers() {\n    return {\n        reconstructFullMetricName: function (key, n, type) {\n            var mn = key;\n\n            if (n) {\n                mn += '(' + n;\n\n                if (type && type.length) {\n                    mn += ',' + type;\n                }\n\n                mn += ')';\n            }\n\n            return mn;\n        },\n\n        validateN: function (n_ms) {\n            if (!n_ms) {\n                throw new Error('missing n');\n            }\n\n            if (isNaN(n_ms)) {\n                throw new Error('n is NaN');\n            }\n\n            // n is a positive integer is defined to refer to the metric\n            // in which the buffer level is recorded every n ms.\n            if (n_ms < 0) {\n                throw new Error('n must be positive');\n            }\n\n            return n_ms;\n        }\n    };\n}\n\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\nexport default FactoryMaker.getSingletonFactory(HandlerHelpers);\n",
    "import Metrics from '../vo/Metrics';\nimport Range from '../vo/Range';\nimport Reporting from '../vo/Reporting';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ManifestParsing (config) {\n    let instance;\n    let dashManifestModel = config.dashManifestModel;\n\n    function getMetricsRangeStartTime(manifest, dynamic, range) {\n        var mpd = dashManifestModel.getMpd(manifest);\n        var periods;\n        var presentationStartTime = 0;\n        var reportingStartTime;\n\n        if (dynamic) {\n            // For services with MPD@type='dynamic', the start time is\n            // indicated in wall clock time by adding the value of this\n            // attribute to the value of the MPD@availabilityStartTime\n            // attribute.\n            presentationStartTime = mpd.availabilityStartTime.getTime() / 1000;\n        } else {\n            // For services with MPD@type='static', the start time is indicated\n            // in Media Presentation time and is relative to the PeriodStart\n            // time of the first Period in this MPD.\n            periods = this.getRegularPeriods(manifest, mpd);\n\n            if (periods.length) {\n                presentationStartTime = periods[0].start;\n            }\n        }\n\n        // When not present, DASH Metrics collection is\n        // requested from the beginning of content\n        // consumption.\n        reportingStartTime = presentationStartTime;\n\n        if (range && range.hasOwnProperty('starttime')) {\n            reportingStartTime += range.starttime;\n        }\n\n        return reportingStartTime;\n    }\n\n    function getMetrics(manifest) {\n        var metrics = [];\n\n        if (manifest.Metrics_asArray) {\n            manifest.Metrics_asArray.forEach(metric => {\n                var metricEntry = new Metrics();\n                var isDynamic = dashManifestModel.getIsDynamic(manifest);\n\n                if (metric.hasOwnProperty('metrics')) {\n                    metricEntry.metrics = metric.metrics;\n                } else {\n                    //console.log(\"Invalid Metrics. metrics must be set. Ignoring.\");\n                    return;\n                }\n\n                if (metric.Range_asArray) {\n                    metric.Range_asArray.forEach(range => {\n                        var rangeEntry = new Range();\n\n                        rangeEntry.starttime =\n                            getMetricsRangeStartTime(manifest, isDynamic, range);\n\n                        if (range.hasOwnProperty('duration')) {\n                            rangeEntry.duration = range.duration;\n                        } else {\n                            // if not present, the value is identical to the\n                            // Media Presentation duration.\n                            rangeEntry.duration = dashManifestModel.getDuration(manifest);\n                        }\n\n                        rangeEntry._useWallClockTime = isDynamic;\n\n                        metricEntry.Range.push(rangeEntry);\n                    });\n                }\n\n                if (metric.Reporting_asArray) {\n                    metric.Reporting_asArray.forEach(reporting => {\n                        var reportingEntry = new Reporting();\n\n                        if (reporting.hasOwnProperty('schemeIdUri')) {\n                            reportingEntry.schemeIdUri = reporting.schemeIdUri;\n                        } else {\n                            // Invalid Reporting. schemeIdUri must be set. Ignore.\n                            return;\n                        }\n\n                        for (const prop in reporting) {\n                            if (reporting.hasOwnProperty(prop)) {\n                                reportingEntry[prop] = reporting[prop];\n                            }\n                        }\n\n                        metricEntry.Reporting.push(reportingEntry);\n                    });\n                } else {\n                    // Invalid Metrics. At least one reporting must be present. Ignore\n                    return;\n                }\n\n                metrics.push(metricEntry);\n            });\n        }\n\n        return metrics;\n    }\n\n    instance = {\n        getMetrics: getMetrics\n    };\n\n    return instance;\n}\n\nManifestParsing.__dashjs_factory_name = 'ManifestParsing';\nexport default FactoryMaker.getSingletonFactory(ManifestParsing);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction MetricSerialiser() {\n\n    // For each entry in the top level list within the metric (in the case\n    // of the DVBErrors metric each entry corresponds to an \"error event\"\n    // described in clause 10.8.4) the Player shall:\n    function serialise(metric) {\n        var pairs = [];\n        var obj = [];\n        var key,\n            value;\n\n        // Take each (key, value) pair from the metric entry and create a\n        // string consisting of the name of the key, followed by an equals\n        // ('=') character, followed by the string representation of the\n        // value. The string representation of the value is created based\n        // on the type of the value following the instructions in Table 22.\n        for (key in metric) {\n            if (metric.hasOwnProperty(key) && (key.indexOf('_') !== 0)) {\n                value = metric[key];\n\n                // we want to ensure that keys still end up in the report\n                // even if there is no value\n                if ((value === undefined) || (value === null)) {\n                    value = '';\n                }\n\n                // DVB A168 10.12.4 Table 22\n                if (Array.isArray(value)) {\n                    // if trace or similar is null, do not include in output\n                    if (!value.length) {\n                        continue;\n                    }\n\n                    obj = [];\n\n                    value.forEach(function (v) {\n                        var isBuiltIn = Object.prototype.toString.call(v).slice(8, -1) !== 'Object';\n\n                        obj.push(isBuiltIn ? v : serialise(v));\n                    });\n\n                    value = encodeURIComponent(obj.join(','));\n                } else if (typeof value === 'string') {\n                    value = encodeURIComponent(value);\n                } else if (value instanceof Date) {\n                    value = value.toISOString();\n                } else if (typeof value === 'number') {\n                    value = Math.round(value);\n                }\n\n                pairs.push(key + '=' + value);\n            }\n        }\n\n        // Concatenate the strings created in the previous step with an\n        // ampersand ('&') character between each one.\n        return pairs.join('&');\n    }\n\n    return {\n        serialise: serialise\n    };\n}\n\nMetricSerialiser.__dashjs_factory_name = 'MetricSerialiser';\nexport default FactoryMaker.getSingletonFactory(MetricSerialiser);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction RNG() {\n\n    // check whether secure random numbers are available. if not, revert to\n    // using Math.random\n    let crypto = window.crypto || window.msCrypto;\n\n    // could just as easily use any other array type by changing line below\n    let ArrayType = Uint32Array;\n    let MAX_VALUE = Math.pow(2, ArrayType.BYTES_PER_ELEMENT * 8) - 1;\n\n    // currently there is only one client for this code, and that only uses\n    // a single random number per initialisation. may want to increase this\n    // number if more consumers in the future\n    let NUM_RANDOM_NUMBERS = 10;\n\n    let randomNumbers,\n        index,\n        instance;\n\n    function initialise() {\n        if (crypto) {\n            if (!randomNumbers) {\n                randomNumbers = new ArrayType(NUM_RANDOM_NUMBERS);\n            }\n            crypto.getRandomValues(randomNumbers);\n            index = 0;\n        }\n    }\n\n    function rand(min, max) {\n        var r;\n\n        if (!min) {\n            min = 0;\n        }\n\n        if (!max) {\n            max = 1;\n        }\n\n        if (crypto) {\n            if (index === randomNumbers.length) {\n                initialise();\n            }\n\n            r = randomNumbers[index] / MAX_VALUE;\n            index += 1;\n        } else {\n            r = Math.random();\n        }\n\n        return (r * (max - min)) + min;\n    }\n\n    instance = {\n        random: rand,\n    };\n\n    initialise();\n\n    return instance;\n}\n\nRNG.__dashjs_factory_name = 'RNG';\nexport default FactoryMaker.getSingletonFactory(RNG);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DVBErrors {\n    constructor() {\n        this.mpdurl = null;\n        // String - Absolute URL from which the MPD was originally\n        // retrieved (MPD updates will not change this value).\n\n        this.errorcode = null;\n        // String - The value of errorcode depends upon the type\n        // of error being reported. For an error listed in the\n        // ErrorType column below the value is as described in the\n        // Value column.\n        //\n        // ErrorType                                            Value\n        // ---------                                            -----\n        // HTTP error status code                               HTTP status code\n        // Unknown HTTP status code                             HTTP status code\n        // SSL connection failed                                \"SSL\" followed by SSL alert value\n        // DNS resolution failed                                \"C00\"\n        // Host unreachable                                     \"C01\"\n        // Connection refused                                   \"C02\"\n        // Connection error – Not otherwise specified           \"C03\"\n        // Corrupt media – ISO BMFF container cannot be parsed  \"M00\"\n        // Corrupt media – Not otherwise specified              \"M01\"\n        // Changing Base URL in use due to errors               \"F00\"\n        // Becoming an error reporting Player                   \"S00\"\n\n        this.terror = null;\n        // Real-Time - Date and time at which error occurred in UTC,\n        // formatted as a combined date and time according to ISO 8601.\n\n        this.url = null;\n        // String - Absolute URL from which data was being requested\n        // when this error occurred. If the error report is in relation\n        // to corrupt media or changing BaseURL, this may be a null\n        // string if the URL from which the media was obtained or\n        // which led to the change of BaseURL is no longer known.\n\n        this.ipaddress = null;\n        // String - IP Address which the host name in \"url\" resolved to.\n        // If the error report is in relation to corrupt media or\n        // changing BaseURL, this may be a null string if the URL\n        // from which the media was obtained or which led to the\n        // change of BaseURL is no longer known.\n\n        this.servicelocation = null;\n        // String - The value of the serviceLocation field in the\n        // BaseURL being used. In the event of this report indicating\n        // a change of BaseURL this is the value from the BaseURL\n        // being moved from.\n    }\n}\n\nDVBErrors.SSL_CONNECTION_FAILED_PREFIX = 'SSL';\nDVBErrors.DNS_RESOLUTION_FAILED =        'C00';\nDVBErrors.HOST_UNREACHABLE =             'C01';\nDVBErrors.CONNECTION_REFUSED =           'C02';\nDVBErrors.CONNECTION_ERROR =             'C03';\nDVBErrors.CORRUPT_MEDIA_ISOBMFF =        'M00';\nDVBErrors.CORRUPT_MEDIA_OTHER =          'M01';\nDVBErrors.BASE_URL_CHANGED =             'F00';\nDVBErrors.BECAME_REPORTER =              'S00';\n\nexport default DVBErrors;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Metrics {\n    constructor() {\n\n        this.metrics = '';\n        this.Range = [];\n        this.Reporting = [];\n    }\n}\n\nexport default Metrics;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Range {\n    constructor() {\n\n        // as defined in ISO23009-1\n        this.starttime = 0;\n        this.duration = Infinity;\n\n        // for internal use\n        this._useWallClockTime = false;\n    }\n}\n\nexport default Range;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Reporting {\n    constructor() {\n        // Reporting is a DescriptorType and doesn't have any additional fields\n        this.schemeIdUri = '';\n        this.value = '';\n    }\n}\n\nexport default Reporting;\n",
    "/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction CustomTimeRanges(/*config*/) {\n    let customTimeRangeArray = [];\n    let length = 0;\n\n    function add(start, end) {\n        var i = 0;\n\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++);\n\n        this.customTimeRangeArray.splice(i, 0, {start: start,end: end});\n\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\n            if (this.mergeRanges(i,i + 1)) {\n                i--;\n            }\n        }\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function clear() {\n        this.customTimeRangeArray = [];\n        this.length = 0;\n    }\n\n    function remove(start, end) {\n        for (var i = 0; i < this.customTimeRangeArray.length; i++) {\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\n                //      |--------------Range i-------|\n                //|---------------Range to remove ---------------|\n                //    or\n                //|--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                //    or\n                //                 |--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                this.customTimeRangeArray.splice(i,1);\n                i--;\n\n            }else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //|-----------------Range i----------------|\n                //        |-------Range to remove -----|\n                this.customTimeRangeArray.splice(i + 1, 0, {start: end,end: this.customTimeRangeArray[i].end});\n                this.customTimeRangeArray[i].end = start;\n                break;\n            }else if ( start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\n                //|-----------Range i----------|\n                //                    |---------Range to remove --------|\n                //    or\n                //|-----------------Range i----------------|\n                //            |-------Range to remove -----|\n                this.customTimeRangeArray[i].end = start;\n            }else if ( end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //                     |-----------Range i----------|\n                //|---------Range to remove --------|\n                //            or\n                //|-----------------Range i----------------|\n                //|-------Range to remove -----|\n                this.customTimeRangeArray[i].start = end;\n            }\n        }\n\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function mergeRanges(rangeIndex1, rangeIndex2) {\n        var range1 = this.customTimeRangeArray[rangeIndex1];\n        var range2 = this.customTimeRangeArray[rangeIndex2];\n\n        if (range1.start <=  range2.start && range2.start <= range1.end && range1.end <= range2.end) {\n            //|-----------Range1----------|\n            //                    |-----------Range2----------|\n            range1.end = range2.end;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\n            //                |-----------Range1----------|\n            //|-----------Range2----------|\n            range1.start = range2.start;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\n            //      |--------Range1-------|\n            //|---------------Range2--------------|\n            this.customTimeRangeArray.splice(rangeIndex1,1);\n            return true;\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\n            //|-----------------Range1--------------|\n            //        |-----------Range2----------|\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        }\n        return false;\n    }\n\n    function start(index) {\n        return this.customTimeRangeArray[index].start;\n    }\n\n    function end(index) {\n        return this.customTimeRangeArray[index].end;\n    }\n\n    return {\n        customTimeRangeArray: customTimeRangeArray,\n        length: length,\n        add: add,\n        clear: clear,\n        remove: remove,\n        mergeRanges: mergeRanges,\n        start: start,\n        end: end\n    };\n}\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);\n"
  ]
}