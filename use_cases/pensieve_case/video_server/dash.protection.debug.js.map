{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "externals/base64.js",
    "src/core/EventBus.js",
    "src/core/FactoryMaker.js",
    "src/core/events/CoreEvents.js",
    "src/core/events/Events.js",
    "src/core/events/EventsBase.js",
    "src/streaming/protection/CommonEncryption.js",
    "src/streaming/protection/Protection.js",
    "src/streaming/protection/ProtectionEvents.js",
    "src/streaming/protection/controllers/ProtectionController.js",
    "src/streaming/protection/controllers/ProtectionKeyController.js",
    "src/streaming/protection/drm/KeySystemClearKey.js",
    "src/streaming/protection/drm/KeySystemPlayReady.js",
    "src/streaming/protection/drm/KeySystemWidevine.js",
    "src/streaming/protection/models/ProtectionModel_01b.js",
    "src/streaming/protection/models/ProtectionModel_21Jan2015.js",
    "src/streaming/protection/models/ProtectionModel_3Feb2014.js",
    "src/streaming/protection/servers/ClearKey.js",
    "src/streaming/protection/servers/DRMToday.js",
    "src/streaming/protection/servers/PlayReady.js",
    "src/streaming/protection/servers/Widevine.js",
    "src/streaming/protection/vo/ClearKeyKeySet.js",
    "src/streaming/protection/vo/KeyError.js",
    "src/streaming/protection/vo/KeyMessage.js",
    "src/streaming/protection/vo/KeyPair.js",
    "src/streaming/protection/vo/KeySystemAccess.js",
    "src/streaming/protection/vo/KeySystemConfiguration.js",
    "src/streaming/protection/vo/MediaCapability.js",
    "src/streaming/protection/vo/NeedKey.js",
    "src/streaming/utils/ErrorHandler.js",
    "src/streaming/vo/Error.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n}\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope: scope,\n            priority: priority\n        };\n\n        const inserted = handlers[type].some((item , idx) => {\n            if (priority > item.priority ) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) return;\n        handlers[type].splice(idx, 1);\n    }\n\n    function trigger(type, payload) {\n        if (!type || !handlers[type]) return;\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\n\n        payload.type = type;\n\n        handlers[type].forEach( handler => handler.callback.call(handler.scope, payload) );\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) return idx;\n\n        handlers[type].some( (item, index) => {\n            if (item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nexport default factory;",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.AST_IN_FUTURE = 'astinfuture';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CHUNK_APPENDED = 'chunkAppended';\n        this.CURRENT_TRACK_CHANGED = 'currenttrackchanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ALL_ELEMENTS_LOADED = 'xlinkAllElementsLoaded';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BASE64 from '../../../externals/base64';\n\nclass CommonEncryption {\n    /**\n     * Find and return the ContentProtection element in the given array\n     * that indicates support for MPEG Common Encryption\n     *\n     * @param {Array} cpArray array of content protection elements\n     * @returns {Object|null} the Common Encryption content protection element or\n     * null if one was not found\n     */\n    static findCencContentProtection(cpArray) {\n        var retVal = null;\n        for (var i = 0; i < cpArray.length; ++i) {\n            var cp = cpArray[i];\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\n                    cp.value.toLowerCase() === 'cenc')\n                retVal = cp;\n        }\n        return retVal;\n    }\n\n    /**\n     * Returns just the data portion of a single PSSH\n     *\n     * @param {ArrayBuffer} pssh - the PSSH\n     * @return {ArrayBuffer} data portion of the PSSH\n     */\n    static getPSSHData(pssh) {\n        var offset = 8; // Box size and type fields\n        var view = new DataView(pssh);\n\n        // Read version\n        var version = view.getUint8(offset);\n\n        offset += 20; // Version (1), flags (3), system ID (16)\n\n        if (version > 0) {\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\n        }\n\n        offset += 4; // Data size\n        return pssh.slice(offset);\n    }\n\n    /**\n     * Returns the PSSH associated with the given key system from the concatenated\n     * list of PSSH boxes in the given initData\n     *\n     * @param {KeySystem} keySystem the desired\n     * key system\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\n     * or null if a valid association could not be found.\n     */\n    static getPSSHForKeySystem(keySystem, initData) {\n        var psshList = CommonEncryption.parsePSSHList(initData);\n        if (psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\n            return psshList[keySystem.uuid.toLowerCase()];\n        }\n        return null;\n    }\n\n    /**\n     * Parse a standard common encryption PSSH which contains a simple\n     * base64-encoding of the init data\n     *\n     * @param {Object} cpData the ContentProtection element\n     * @returns {ArrayBuffer|null} the init data or null if not found\n     */\n    static parseInitDataFromContentProtection(cpData) {\n        if ('pssh' in cpData) {\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\n        }\n        return null;\n    }\n\n    /**\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\n     *\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\n     * CDM as initialization data when CommonEncryption content is detected\n     * @returns {Object|Array} an object that has a property named according to each of\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n     * and a ArrayBuffer (the entire PSSH box) as the property value\n     */\n    static parsePSSHList(data) {\n\n        if (data === null)\n            return [];\n\n        var dv = new DataView(data);\n        var done = false;\n        var pssh = {};\n\n        // TODO: Need to check every data read for end of buffer\n        var byteCursor = 0;\n        while (!done) {\n\n            var size,\n                nextBox,\n                version,\n                systemID,\n                psshDataSize;\n            var boxStart = byteCursor;\n\n            if (byteCursor >= dv.buffer.byteLength)\n                break;\n\n            /* Box size */\n            size = dv.getUint32(byteCursor);\n            nextBox = byteCursor + size;\n            byteCursor += 4;\n\n            /* Verify PSSH */\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor += 4;\n\n            /* Version must be 0 or 1 */\n            version = dv.getUint8(byteCursor);\n            if (version !== 0 && version !== 1) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor++;\n\n            byteCursor += 3; /* skip flags */\n\n            // 16-byte UUID/SystemID\n            systemID = '';\n            var i, val;\n            for (i = 0; i < 4; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 4;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 6; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 6;\n\n            systemID = systemID.toLowerCase();\n\n            /* PSSH Data Size */\n            psshDataSize = dv.getUint32(byteCursor);\n            byteCursor += 4;\n\n            /* PSSH Data */\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\n            byteCursor = nextBox;\n        }\n\n        return pssh;\n    }\n}\n\nexport default CommonEncryption;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n\n    let instance;\n    let context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n\n        let controller = null;\n\n        let protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({log: config.log,});\n        protectionKeyController.initialize();\n\n        let protectionModel =  getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                adapter: config.adapter,\n                eventBus: config.eventBus,\n                log: config.log\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function getProtectionModel(config) {\n\n        let log = config.log;\n        let eventBus = config.eventBus;\n        let videoElement = config.videoModel.getElement();\n\n        if (videoElement.onencrypted !== undefined &&\n            videoElement.mediaKeys !== undefined &&\n            navigator.requestMediaKeySystemAccess !== undefined &&\n            typeof navigator.requestMediaKeySystemAccess === 'function') {\n\n            log('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({log: log, eventBus: eventBus});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n\n            log('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n\n            log('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_01b)});\n\n        } else {\n\n            log('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n\n        }\n    }\n\n    function getAPI(videoElement, apis) {\n\n        for (var i = 0; i < apis.length; i++) {\n            var api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem: createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nlet factory = FactoryMaker.getClassFactory(Protection);\nfactory.events = ProtectionEvents;\nexport default factory;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n/**\n * @class\n *\n */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events\n     */\n    constructor () {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @ignore\n         */\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @ignore\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from '../CommonEncryption';\nimport Events from '../../../core/events/Events';\nimport MediaCapability from '../vo/MediaCapability';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Protection from '../Protection';\n\n/**\n * @module ProtectionController\n * @description Provides access to media protection information and functionality.  Each\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\n * which encapsulates a set of protection information (EME APIs, selected key system,\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\n * functionality provided in {@link ProtectionKeyController}.\n * @todo ProtectionController does almost all of its tasks automatically after init() is\n * called.  Applications might want more control over this process and want to go through\n * each step manually (key system selection, session creation, session maintenance).\n * @param {Object} config\n */\n\nfunction ProtectionController(config) {\n\n    let protectionKeyController = config.protectionKeyController;\n    let protectionModel = config.protectionModel;\n    let adapter = config.adapter;\n    let eventBus = config.eventBus;\n    let log = config.log;\n\n    let instance,\n        keySystems,\n        pendingNeedKeyData,\n        audioInfo,\n        videoInfo,\n        protDataSet,\n        initialized,\n        sessionType,\n        robustnessLevel,\n        keySystem;\n\n    function setup() {\n        keySystems = protectionKeyController.getKeySystems();\n        pendingNeedKeyData = [];\n        initialized = false;\n        sessionType = 'temporary';\n        robustnessLevel = '';\n\n        Events.extend(Protection.events);\n    }\n\n    /**\n     * Initialize this protection system with a given manifest and optional audio\n     * and video stream information.\n     *\n     * @param {Object} manifest the json version of the manifest XML document for the\n     * desired content.  Applications can download their manifest using\n     * {@link module:MediaPlayer#retrieveManifest}\n     * @param {StreamInfo} [aInfo] audio stream information\n     * @param {StreamInfo} [vInfo] video stream information\n     * @memberof module:ProtectionController\n     * @instance\n     * @todo This API will change when we have better support for allowing applications\n     * to select different adaptation sets for playback.  Right now it is clunky for\n     * applications to create {@link StreamInfo} with the right information,\n     */\n    function initialize(manifest, aInfo, vInfo) {\n\n        // TODO: We really need to do much more here... We need to be smarter about knowing\n        // which adaptation sets for which we have initialized, including the default key ID\n        // value from the ContentProtection elements so we know whether or not we still need to\n        // select key systems and acquire keys.\n        if (!initialized) {\n\n            var streamInfo;\n\n            if (!aInfo && !vInfo) {\n                // Look for ContentProtection elements.  InitData can be provided by either the\n                // dash264drm:Pssh ContentProtection format or a DRM-specific format.\n                streamInfo = adapter.getStreamsInfo(manifest)[0]; // TODO: Single period only for now. See TODO above\n            }\n\n            audioInfo = aInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'audio') : null);\n            videoInfo = vInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'video') : null);\n\n            var mediaInfo = (videoInfo) ? videoInfo : audioInfo; // We could have audio or video only\n\n            // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\n            // and video will be the same.  Just use one valid MediaInfo object\n            var supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\n            if (supportedKS && supportedKS.length > 0) {\n                selectKeySystem(supportedKS, true);\n            }\n\n            initialized = true;\n        }\n    }\n\n    /**\n     * Create a new key session associated with the given initialization data from\n     * the MPD or from the PSSH box in the media\n     *\n     * @param {ArrayBuffer} initData the initialization data\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\n     * to come up to speed with the latest EME standard\n     */\n    function createKeySession(initData) {\n        var initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\n        if (initDataForKS) {\n\n            // Check for duplicate initData\n            var currentInitData = protectionModel.getAllInitData();\n            for (var i = 0; i < currentInitData.length; i++) {\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\n                    log('DRM: Ignoring initData because we have already seen it!');\n                    return;\n                }\n            }\n            try {\n                protectionModel.createKeySession(initDataForKS, sessionType);\n            } catch (error) {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error creating key session! ' + error.message});\n            }\n        } else {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Selected key system is ' + keySystem.systemString + '.  needkey/encrypted event contains no initData corresponding to that key system!'});\n        }\n    }\n\n    /**\n     * Loads a key session with the given session ID from persistent storage.  This\n     * essentially creates a new key session\n     *\n     * @param {string} sessionID\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     */\n    function loadKeySession(sessionID) {\n        protectionModel.loadKeySession(sessionID);\n    }\n\n    /**\n     * Removes the given key session from persistent storage and closes the session\n     * as if {@link ProtectionController#closeKeySession}\n     * was called\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionRemoved\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function removeKeySession(sessionToken) {\n        protectionModel.removeKeySession(sessionToken);\n    }\n\n    /**\n     * Closes the key session and releases all associated decryption keys.  These\n     * keys will no longer be available for decrypting media\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function closeKeySession(sessionToken) {\n        protectionModel.closeKeySession(sessionToken);\n    }\n\n    /**\n     * Sets a server certificate for use by the CDM when signing key messages\n     * intended for a particular license server.  This will fire\n     * an error event if a key system has not yet been selected.\n     *\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\n     * certificate\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#ServerCertificateUpdated\n     */\n    function setServerCertificate(serverCertificate) {\n        protectionModel.setServerCertificate(serverCertificate);\n    }\n\n    /**\n     * Associate this protection system with the given HTMLMediaElement.  This\n     * causes the system to register for needkey/encrypted events from the given\n     * element and provides a destination for setting of MediaKeys\n     *\n     * @param {HTMLMediaElement} element the media element to which the protection\n     * system should be associated\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setMediaElement(element) {\n        if (element) {\n            protectionModel.setMediaElement(element);\n            eventBus.on(Events.NEED_KEY, onNeedKey, this);\n            eventBus.on(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        } else if (element === null) {\n            protectionModel.setMediaElement(element);\n            eventBus.off(Events.NEED_KEY, onNeedKey, this);\n            eventBus.off(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        }\n    }\n\n    /**\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\n     * \"persistent-license\".  Default is \"temporary\".\n     *\n     * @param {string} value the session type\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setSessionType(value) {\n        sessionType = value;\n    }\n\n    /**\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\n     *\n     * @param {string} level the robustness level\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setRobustnessLevel(level) {\n        robustnessLevel = level;\n    }\n\n    /**\n     * Attach KeySystem-specific data to use for license acquisition with EME\n     *\n     * @param {Object} data an object containing property names corresponding to\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\n     * being instances of {@link ProtectionData}\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setProtectionData(data) {\n        protDataSet = data;\n    }\n\n    /**\n     * Destroys all protection data associated with this protection set.  This includes\n     * deleting all key sessions.  In the case of persistent key sessions, the sessions\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\n     * associated with a HTMLMediaElement, it will be detached from that element.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function reset() {\n        setMediaElement(null);\n\n        keySystem = undefined;//TODO-Refactor look at why undefined is needed for this. refactor\n\n        if (protectionModel) {\n            protectionModel.reset();\n            protectionModel = null;\n        }\n    }\n\n    ///////////////\n    // Private\n    ///////////////\n\n    function getProtData(keySystem) {\n        var protData = null;\n        var keySystemString = keySystem.systemString;\n\n        if (protDataSet) {\n            protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\n        }\n        return protData;\n    }\n\n    function selectKeySystem(supportedKS, fromManifest) {\n\n        var self = this;\n\n        // Build our request object for requestKeySystemAccess\n        var audioCapabilities = [];\n        var videoCapabilities = [];\n\n        if (videoInfo) {\n            videoCapabilities.push(new MediaCapability(videoInfo.codec, robustnessLevel));\n        }\n        if (audioInfo) {\n            audioCapabilities.push(new MediaCapability(audioInfo.codec, robustnessLevel));\n        }\n        var ksConfig = new KeySystemConfiguration(\n                audioCapabilities, videoCapabilities, 'optional',\n                (sessionType === 'temporary') ? 'optional' : 'required',\n                [sessionType]);\n        var requestedKeySystems = [];\n\n        var ksIdx;\n        if (keySystem) {\n            // We have a key system\n            for (ksIdx = 0; ksIdx < supportedKS.length; ksIdx++) {\n                if (keySystem === supportedKS[ksIdx].ks) {\n\n                    requestedKeySystems.push({ks: supportedKS[ksIdx].ks, configs: [ksConfig]});\n\n                    // Ensure that we would be granted key system access using the key\n                    // system and codec information\n                    let onKeySystemAccessComplete = function (event) {\n                        eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                        if (event.error) {\n                            if (!fromManifest) {\n                                eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                            }\n                        } else {\n                            log('DRM: KeySystem Access Granted');\n                            eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: event.data});\n                            createKeySession(supportedKS[ksIdx].initData);\n                        }\n                    };\n                    eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                    protectionModel.requestKeySystemAccess(requestedKeySystems);\n                    break;\n                }\n            }\n        }\n        else if (keySystem === undefined) {\n            // First time through, so we need to select a key system\n            keySystem = null;\n            pendingNeedKeyData.push(supportedKS);\n\n            // Add all key systems to our request list since we have yet to select a key system\n            for (var i = 0; i < supportedKS.length; i++) {\n                requestedKeySystems.push({ks: supportedKS[i].ks, configs: [ksConfig]});\n            }\n\n            var keySystemAccess;\n            var onKeySystemAccessComplete = function (event) {\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (event.error) {\n                    keySystem = undefined;\n                    eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                    }\n                } else {\n                    keySystemAccess = event.data;\n                    log('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\n                    protectionModel.selectKeySystem(keySystemAccess);\n                }\n            };\n            var onKeySystemSelected = function (event) {\n                eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (!event.error) {\n                    keySystem = protectionModel.getKeySystem();\n                    eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: keySystemAccess});\n                    for (var i = 0; i < pendingNeedKeyData.length; i++) {\n                        for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\n                            if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData);\n                                break;\n                            }\n                        }\n                    }\n                } else {\n                    keySystem = undefined;\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: Error selecting key system! -- ' + event.error});\n                    }\n                }\n            };\n            eventBus.on(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n            eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n            protectionModel.requestKeySystemAccess(requestedKeySystems);\n        } else {\n            // We are in the process of selecting a key system, so just save the data\n            pendingNeedKeyData.push(supportedKS);\n        }\n    }\n\n    function sendLicenseRequestCompleteEvent(data, error) {\n        eventBus.trigger(Events.LICENSE_REQUEST_COMPLETE, {data: data, error: error});\n    }\n\n    function onKeyMessage(e) {\n        log('DRM: onKeyMessage');\n        if (e.error) {\n            log(e.error);\n            return;\n        }\n\n        // Dispatch event to applications indicating we received a key message\n        var keyMessage = e.data;\n        eventBus.trigger(Events.KEY_MESSAGE, {data: keyMessage});\n        var messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        var message = keyMessage.message;\n        var sessionToken = keyMessage.sessionToken;\n        var protData = getProtData(keySystem);\n        var keySystemString = keySystem.systemString;\n        var licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\n        var eventData = { sessionToken: sessionToken, messageType: messageType };\n\n        // Message not destined for license server\n        if (!licenseServerData) {\n            log('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\n            sendLicenseRequestCompleteEvent(eventData);\n            return;\n        }\n\n        // Perform any special handling for ClearKey\n        if (protectionKeyController.isClearKey(keySystem)) {\n            var clearkeys = protectionKeyController.processClearKeyLicenseRequest(protData, message);\n            if (clearkeys)  {\n                log('DRM: ClearKey license request handled by application!');\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken, clearkeys);\n                return;\n            }\n        }\n\n        // All remaining key system scenarios require a request to a remote license server\n        var xhr = new XMLHttpRequest();\n\n        // Determine license server URL\n        var url = null;\n        if (protData) {\n            if (protData.serverURL) {\n                var serverURL = protData.serverURL;\n                if (typeof serverURL === 'string' && serverURL !== '') {\n                    url = serverURL;\n                } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\n                    url = serverURL[messageType];\n                }\n            } else if (protData.laURL && protData.laURL !== '') { // TODO: Deprecated!\n                url = protData.laURL;\n            }\n        } else {\n            url = keySystem.getLicenseServerURLFromInitData(CommonEncryption.getPSSHData(sessionToken.initData));\n            if (!url) {\n                url = e.data.laURL;\n            }\n        }\n        // Possibly update or override the URL based on the message\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\n\n        // Ensure valid license server URL\n        if (!url) {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: No license server URL specified!');\n            return;\n        }\n\n        xhr.open(licenseServerData.getHTTPMethod(messageType), url, true);\n        xhr.responseType = licenseServerData.getResponseType(keySystemString, messageType);\n        xhr.onload = function () {\n            if (this.status == 200) {\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken,\n                        licenseServerData.getLicenseMessage(this.response, keySystemString, messageType));\n            } else {\n                sendLicenseRequestCompleteEvent(eventData,\n                        'DRM: ' + keySystemString + ' update, XHR status is \"' + this.statusText + '\" (' + this.status +\n                        '), expected to be 200. readyState is ' + this.readyState +\n                        '.  Response is ' + ((this.response) ? licenseServerData.getErrorResponse(this.response, keySystemString, messageType) : 'NONE'));\n            }\n        };\n        xhr.onabort = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR aborted. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n        xhr.onerror = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR error. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n\n        // Set optional XMLHttpRequest headers from protection data and message\n        var updateHeaders = function (headers) {\n            var key;\n            if (headers) {\n                for (key in headers) {\n                    if ('authorization' === key.toLowerCase()) {\n                        xhr.withCredentials = true;\n                    }\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        };\n        if (protData) {\n            updateHeaders(protData.httpRequestHeaders);\n        }\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\n\n        // Set withCredentials property from protData\n        if (protData && protData.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        xhr.send(keySystem.getLicenseRequestFromMessage(message));\n    }\n\n    function onNeedKey(event) {\n        log('DRM: onNeedKey');\n        // Ignore non-cenc initData\n        if (event.key.initDataType !== 'cenc') {\n            log('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\n            return;\n        }\n\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\n        // Convert to ArrayBuffer\n        var abInitData = event.key.initData;\n        if (ArrayBuffer.isView(abInitData)) {\n            abInitData = abInitData.buffer;\n        }\n\n        log('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\n\n        var supportedKS = protectionKeyController.getSupportedKeySystems(abInitData, protDataSet);\n        if (supportedKS.length === 0) {\n            log('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\n            return;\n        }\n\n        selectKeySystem(supportedKS, false);\n    }\n\n    instance = {\n        initialize: initialize,\n        createKeySession: createKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        setMediaElement: setMediaElement,\n        setSessionType: setSessionType,\n        setRobustnessLevel: setRobustnessLevel,\n        setProtectionData: setProtectionData,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nProtectionController.__dashjs_factory_name = 'ProtectionController';\nexport default FactoryMaker.getClassFactory(ProtectionController);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from './../CommonEncryption';\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\nimport DRMToday from './../servers/DRMToday';\nimport PlayReady from './../servers/PlayReady';\nimport Widevine from './../servers/Widevine';\nimport ClearKey from './../servers/ClearKey';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\n/**\n * @module ProtectionKeyController\n * @description Media protection key system functionality that can be modified/overridden by applications\n */\nfunction ProtectionKeyController() {\n\n    let context = this.context;\n\n    let instance,\n        log,\n        keySystems,\n        clearkeyKeySystem;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.log) {\n            log = config.log;\n        }\n    }\n\n    function initialize() {\n        keySystems = [];\n\n        var keySystem;\n\n        // PlayReady\n        keySystem = KeySystemPlayReady(context).getInstance();\n        keySystems.push(keySystem);\n\n        // Widevine\n        keySystem = KeySystemWidevine(context).getInstance();\n        keySystems.push(keySystem);\n\n        // ClearKey\n        keySystem = KeySystemClearKey(context).getInstance();\n        keySystems.push(keySystem);\n        clearkeyKeySystem = keySystem;\n    }\n\n    /**\n     * Returns a prioritized list of key systems supported\n     * by this player (not necessarily those supported by the\n     * user agent)\n     *\n     * @returns {Array.<KeySystem>} a prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystems() {\n        return keySystems;\n    }\n\n    /**\n     * Returns the key system associated with the given key system string\n     * name (i.e. 'org.w3.clearkey')\n     *\n     * @param {string} systemString the system string\n     * @returns {KeySystem|null} the key system\n     * or null if no supported key system is associated with the given key\n     * system string\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystemBySystemString(systemString) {\n        for (var i = 0; i < keySystems.length; i++) {\n            if (keySystems[i].systemString === systemString) {\n                return keySystems[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines whether the given key system is ClearKey.  This is\n     * necessary because the EME spec defines ClearKey and its method\n     * for providing keys to the key session; and this method has changed\n     * between the various API versions.  Our EME-specific ProtectionModels\n     * must know if the system is ClearKey so that it can format the keys\n     * according to the particular spec version.\n     *\n     * @param {Object} keySystem the key\n     * @returns {boolean} true if this is the ClearKey key system, false\n     * otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function isClearKey(keySystem) {\n        return (keySystem === clearkeyKeySystem);\n    }\n\n    /**\n     * Check equality of initData array buffers.\n     *\n     * @param {ArrayBuffer} initData1 - first initData\n     * @param {ArrayBuffer} initData2 - second initData\n     * @returns {boolean} true if the initData arrays are equal in size and\n     * contents, false otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function initDataEquals(initData1, initData2) {\n        if (initData1.byteLength === initData2.byteLength) {\n            var data1 = new Uint8Array(initData1);\n            var data2 = new Uint8Array(initData2);\n\n            for (var j = 0; j < data1.length; j++) {\n                if (data1[j] !== data2[j]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        var cp, ks, ksIdx, cpIdx;\n        var supportedKS = [];\n\n        if (cps) {\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n                ks = keySystems[ksIdx];\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\n                    cp = cps[cpIdx];\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\n\n                        // Look for DRM-specific ContentProtection\n                        var initData = ks.getInitData(cp);\n                        if (!!initData) {\n                            supportedKS.push({\n                                ks: keySystems[ksIdx],\n                                initData: initData\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns key systems supported by this player for the given PSSH\n     * initializationData. Only key systems supported by this player\n     * that have protection data present will be returned.  Key systems are returned in priority order\n     * (highest priority first)\n     *\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\n     * supported by the content\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystems(initData, protDataSet) {\n        var ksIdx;\n        var supportedKS = [];\n        var pssh = CommonEncryption.parsePSSHList(initData);\n\n        for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n            var keySystemString = keySystems[ksIdx].systemString;\n            var shouldNotFilterOutKeySystem = (protDataSet) ? keySystemString in protDataSet : true;\n\n            if (keySystems[ksIdx].uuid in pssh && shouldNotFilterOutKeySystem) {\n                supportedKS.push({\n                    ks: keySystems[ksIdx],\n                    initData: pssh[keySystems[ksIdx].uuid]\n                });\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns the license server implementation data that should be used for this request.\n     *\n     * @param {KeySystem} keySystem the key system\n     * associated with this license request\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\n     * request.  Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @returns {LicenseServer|null} the license server\n     * implementation that should be used for this request or null if the player should not\n     * pass messages of the given type to a license server\n     * @memberof module:ProtectionKeyController\n     * @instance\n     *\n     */\n    function getLicenseServer(keySystem, protData, messageType) {\n\n        // Our default server implementations do not do anything with \"license-release\" or\n        // \"individualization-request\" messages, so we just send a success event\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\n            return null;\n        }\n\n        var licenseServerData = null;\n        if (protData && protData.hasOwnProperty('drmtoday')) {\n            licenseServerData = DRMToday(context).getInstance();\n        } else if (keySystem.systemString === 'com.widevine.alpha') {\n            licenseServerData = Widevine(context).getInstance();\n        } else if (keySystem.systemString === 'com.microsoft.playready') {\n            licenseServerData = PlayReady(context).getInstance();\n        } else if (keySystem.systemString === 'org.w3.clearkey') {\n            licenseServerData = ClearKey(context).getInstance();\n        }\n\n        return licenseServerData;\n    }\n\n    /**\n     * Allows application-specific retrieval of ClearKey keys.\n     *\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {ArrayBuffer} message the key message from the CDM\n     * @return {ClearKeyKeySet|null} the clear keys associated with\n     * the request or null if no keys can be returned by this function\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function processClearKeyLicenseRequest(protData, message) {\n        try {\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\n        } catch (error) {\n            log('Failed to retrieve clearkeys from ProtectionData');\n            return null;\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        isClearKey: isClearKey,\n        initDataEquals: initDataEquals,\n        getKeySystems: getKeySystems,\n        getKeySystemBySystemString: getKeySystemBySystemString,\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\n        getSupportedKeySystems: getSupportedKeySystems,\n        getLicenseServer: getLicenseServer,\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\nexport default FactoryMaker.getSingletonFactory(ProtectionKeyController);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = 'org.w3.clearkey';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey() {\n\n    let instance;\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        var clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            var keyPairs = [];\n            for (var i = 0; i < jsonMsg.kids.length; i++) {\n                var clearkeyID = jsonMsg.kids[i];\n                var clearkey = (protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default FactoryMaker.getSingletonFactory(KeySystemClearKey);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady DRM\n *\n * @class\n * @implements KeySystem\n */\nimport CommonEncryption from '../CommonEncryption';\nimport Error from '../../vo/Error';\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport BASE64 from '../../../../externals/base64';\n\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\nconst systemString = 'com.microsoft.playready';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemPlayReady() {\n\n    let instance;\n    let messageFormat = 'utf16';\n\n    function getRequestHeadersFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var headers = {};\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        var headerNameList = xmlDoc.getElementsByTagName('name');\n        var headerValueList = xmlDoc.getElementsByTagName('value');\n        for (var i = 0; i < headerNameList.length; i++) {\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\n        }\n        // some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\n        // this is NOT w3c conform and license servers may reject the request!\n        // -> rename it to proper w3c definition!\n        if (headers.hasOwnProperty('Content')) {\n            headers['Content-Type'] = headers.Content;\n            delete headers.Content;\n        }\n        return headers;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var licenseRequest = null;\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        if (xmlDoc.getElementsByTagName('Challenge')[0]) {\n            var Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\n            if (Challenge) {\n                licenseRequest = BASE64.decode(Challenge);\n            }\n        }\n        return licenseRequest;\n    }\n\n    function getLicenseServerURLFromInitData(initData) {\n        if (initData) {\n            var data = new DataView(initData);\n            var numRecords = data.getUint16(4, true);\n            var offset = 6;\n            var parser = new DOMParser();\n\n            for (var i = 0; i < numRecords; i++) {\n                // Parse the PlayReady Record header\n                var recordType = data.getUint16(offset, true);\n                offset += 2;\n                var recordLength = data.getUint16(offset, true);\n                offset += 2;\n                if (recordType !== 0x0001) {\n                    offset += recordLength;\n                    continue;\n                }\n\n                var recordData = initData.slice(offset, offset + recordLength);\n                var record = String.fromCharCode.apply(null, new Uint16Array(recordData));\n                var xmlDoc = parser.parseFromString(record, 'application/xml');\n\n                // First try <LA_URL>\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\n                    var laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\n                    if (laurl) {\n                        return laurl;\n                    }\n                }\n\n                // Optionally, try <LUI_URL>\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\n                    var luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\n                    if (luiurl) {\n                        return luiurl;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getInitData(cpData) {\n        // * desc@ getInitData\n        // *   generate PSSH data from PROHeader defined in MPD file\n        // *   PSSH format:\n        // *   size (4)\n        // *   box type(PSSH) (8)\n        // *   Protection SystemID (16)\n        // *   protection system data size (4) - length of decoded PROHeader\n        // *   decoded PROHeader data from MPD file\n        var PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\n        var playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\n\n        var byteCursor = 0;\n        var uint8arraydecodedPROHeader = null;\n\n        var PROSize,\n            PSSHSize,\n            PSSHBoxBuffer,\n            PSSHBox,\n            PSSHData;\n\n        // Handle common encryption PSSH\n        if ('pssh' in cpData) {\n            return CommonEncryption.parseInitDataFromContentProtection(cpData);\n        }\n        // Handle native MS PlayReady ContentProtection elements\n        if ('pro' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\n        }\n        else if ('prheader' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\n        }\n        else {\n            return null;\n        }\n\n        PROSize = uint8arraydecodedPROHeader.length;\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\n\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\n\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\n        PSSHData = new DataView(PSSHBoxBuffer);\n\n        PSSHData.setUint32(byteCursor, PSSHSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(PSSHBoxType, byteCursor);\n        byteCursor += PSSHBoxType.length;\n\n        PSSHBox.set(playreadySystemID, byteCursor);\n        byteCursor += playreadySystemID.length;\n\n        PSSHData.setUint32(byteCursor, PROSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\n        byteCursor += PROSize;\n\n        return PSSHBox.buffer;\n    }\n\n    /**\n     * It seems that some PlayReady implementations return their XML-based CDM\n     * messages using UTF16, while others return them as UTF8.  Use this function\n     * to modify the message format to expect when parsing CDM messages.\n     *\n     * @param {string} format the expected message format.  Either \"utf8\" or \"utf16\".\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\n     */\n    function setPlayReadyMessageFormat(format) {\n        if (format !== 'utf8' && format !== 'utf16') {\n            throw new Error('Illegal PlayReady message format! -- ' + format);\n        }\n        messageFormat = format;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat\n    };\n\n    return instance;\n}\n\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\nexport default FactoryMaker.getSingletonFactory(KeySystemPlayReady);",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = 'com.widevine.alpha';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine() {\n\n    let instance;\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default FactoryMaker.getSingletonFactory(KeySystemWidevine);",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Initial implementation of EME\n *\n * Implemented by Google Chrome prior to v36\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport ErrorHandler from '../../utils/ErrorHandler';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_01b(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n    let instance,\n        videoElement,\n        keySystem,\n        protectionKeyController,\n        errHandler,\n\n        // With this version of the EME APIs, sessionIDs are not assigned to\n        // sessions until the first key message is received.  We are assuming\n        // that in the case of multiple sessions, key messages will be received\n        // in the order that generateKeyRequest() is called.\n        // Holding spot for newly-created sessions until we determine whether or\n        // not the CDM supports sessionIDs\n        pendingSessions,\n\n        // List of sessions that have been initialized.  Only the first position will\n        // be used in the case that the CDM does not support sessionIDs\n        sessions,\n\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\n        // there is no way for us to differentiate between sessions, therefore\n        // we must only allow a single session.  Once we receive the first key\n        // message we can set this flag to determine if more sessions are allowed\n        moreSessionsAllowed,\n\n        // This is our main event handler for all desired HTMLMediaElement events\n        // related to EME.  These events are translated into our API-independent\n        // versions of the same events\n        eventHandler;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        pendingSessions = [];\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        errHandler = ErrorHandler(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        if (videoElement) {\n            removeEventListeners();\n        }\n        for (var i = 0; i < sessions.length; i++) {\n            closeKeySession(sessions[i]);\n        }\n        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (let i = 0; i < pendingSessions.length; i++) {\n            retVal.push(pendingSessions[i].initData);\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        var ve = videoElement;\n        if (!ve) { // Must have a video element to do this capability tests\n            ve = document.createElement('video');\n        }\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                //var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystem = keySystemAccess.keySystem;\n        eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement) {\n            return;\n        }\n\n        // Replacing the previous element\n        if (videoElement) {\n            removeEventListeners();\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.keyerror, eventHandler);\n            videoElement.addEventListener(api.needkey, eventHandler);\n            videoElement.addEventListener(api.keymessage, eventHandler);\n            videoElement.addEventListener(api.keyadded, eventHandler);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Determine if creating a new session is allowed\n        if (moreSessionsAllowed || sessions.length === 0) {\n\n            var newSession = { // Implements SessionToken\n                sessionID: null,\n                initData: initData,\n                getSessionID: function () {\n                    return this.sessionID;\n                },\n\n                getExpirationTime: function () {\n                    return NaN;\n                },\n\n                getSessionType: function () {\n                    return 'temporary';\n                }\n            };\n            pendingSessions.push(newSession);\n\n            // Send our request to the CDM\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\n\n            return newSession;\n\n        } else {\n            throw new Error('Multiple sessions not allowed!');\n        }\n\n    }\n\n    function updateKeySession(sessionToken, message) {\n        var sessionID = sessionToken.sessionID;\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the CDM\n            videoElement[api.addKey](keySystem.systemString,\n                new Uint8Array(message), sessionToken.initData, sessionID);\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            for (var i = 0; i < message.keyPairs.length; i++) {\n                videoElement[api.addKey](keySystem.systemString,\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\n            }\n        }\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the CDM\n        videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                var sessionToken = null;\n                switch (event.type) {\n\n                    case api.needkey:\n                        var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                        eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        break;\n\n                    case api.keyerror:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            var msg = '';\n                            switch (event.errorCode.code) {\n                                case 1:\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n                                    break;\n                                case 2:\n                                    msg += 'MEDIA_KEYERR_CLIENT - The Key System could not be installed or updated.';\n                                    break;\n                                case 3:\n                                    msg += 'MEDIA_KEYERR_SERVICE - The message passed into update indicated an error from the license service.';\n                                    break;\n                                case 4:\n                                    msg += 'MEDIA_KEYERR_OUTPUT - There is no available output device with the required characteristics for the content protection system.';\n                                    break;\n                                case 5:\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - A hardware configuration change caused a content protection error.';\n                                    break;\n                                case 6:\n                                    msg += 'MEDIA_KEYERR_DOMAIN - An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n                                    break;\n                            }\n                            msg += '  System Code = ' + event.systemCode;\n                            // TODO: Build error string based on key error\n                            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, msg)});\n                        } else {\n                            log('No session token found for key error');\n                        }\n                        break;\n\n                    case api.keyadded:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            log('DRM: Key added.');\n                            eventBus.trigger(Events.KEY_ADDED, {data: sessionToken});//TODO not sure anything is using sessionToken? why there?\n                        } else {\n                            log('No session token found for key added');\n                        }\n                        break;\n\n                    case api.keymessage:\n\n                        // If this CDM does not support session IDs, we will be limited\n                        // to a single session\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\n\n                        // SessionIDs supported\n                        if (moreSessionsAllowed) {\n\n                            // Attempt to find an uninitialized token with this sessionID\n                            sessionToken = findSessionByID(sessions, event.sessionId);\n                            if (!sessionToken && pendingSessions.length > 0) {\n\n                                // This is the first message for our latest session, so set the\n                                // sessionID and add it to our list\n                                sessionToken = pendingSessions.shift();\n                                sessions.push(sessionToken);\n                                sessionToken.sessionID = event.sessionId;\n                            }\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\n\n                            sessionToken = pendingSessions.shift();\n                            sessions.push(sessionToken);\n\n                            if (pendingSessions.length !== 0) {\n                                errHandler.mediaKeyMessageError('Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!');\n                            }\n                        }\n\n                        if (sessionToken) {\n                            var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n\n                            // For ClearKey, the spec mandates that you pass this message to the\n                            // addKey method, so we always save it to the token since there is no\n                            // way to tell which key system is in use\n                            sessionToken.keyMessage = message;\n                            eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(sessionToken, message, event.defaultURL)});\n\n                        } else {\n                            log('No session token found for key message');\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    /**\n     * Helper function to retrieve the stored session token based on a given\n     * sessionID value\n     *\n     * @param {Array} sessionArray - the array of sessions to search\n     * @param {*} sessionID - the sessionID to search for\n     * @returns {*} the session token with the given sessionID\n     */\n    function findSessionByID(sessionArray, sessionID) {\n\n        if (!sessionID || !sessionArray) {\n            return null;\n        } else {\n            var len = sessionArray.length;\n            for (var i = 0; i < len; i++) {\n                if (sessionArray[i].sessionID == sessionID) {\n                    return sessionArray[i];\n                }\n            }\n            return null;\n        }\n    }\n\n    function removeEventListeners() {\n        videoElement.removeEventListener(api.keyerror, eventHandler);\n        videoElement.removeEventListener(api.needkey, eventHandler);\n        videoElement.removeEventListener(api.keymessage, eventHandler);\n        videoElement.removeEventListener(api.keyadded, eventHandler);\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\nexport default FactoryMaker.getClassFactory(ProtectionModel_01b);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n\n    var instance,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        var numSessions = sessions.length;\n        var session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            var done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (var i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        requestKeySystemAccessInternal(ksConfigurations, 0);\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\n            keySystem = keySystemAccess.keySystem;\n            mediaKeys = mkeys;\n            if (videoElement) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n\n        }).catch(function () {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        });\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            videoElement.setMediaKeys(null);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            log('DRM: License server certificate successfully updated.');\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED, {error: 'Error updating server certificate -- ' + error.name});\n        });\n    }\n\n    function createKeySession(initData, sessionType) {\n\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession(sessionType);\n        var sessionToken = createSessionToken(session, initData, sessionType);\n\n        // Generate initial key request\n        session.generateRequest('cenc', initData).then(function () {\n            log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n        }).catch(function (error) {\n            // TODO: Better error string\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error generating key request -- ' + error.name});\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message).catch(function (error) {\n            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, 'Error sending update() message! ' + error.name)});\n        });\n    }\n\n    function loadKeySession(sessionID) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession();\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionID).then(function (success) {\n            if (success) {\n                var sessionToken = createSessionToken(session);\n                log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n            } else {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session! Invalid Session ID (' + sessionID + ')'});\n            }\n        }).catch(function (error) {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session (' + sessionID + ')! ' + error.name});\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        var session = sessionToken.session;\n\n        session.remove().then(function () {\n            log('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\n        }, function (error) {\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\n        });\n    }\n\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\n        (function (i) {\n            var keySystem = ksConfigurations[i].ks;\n            var configs = ksConfigurations[i].configs;\n            navigator.requestMediaKeySystemAccess(keySystem.systemString, configs).then(function (mediaKeySystemAccess) {\n\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\n                var configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                        mediaKeySystemAccess.getConfiguration() : null;\n                var keySystemAccess = new KeySystemAccess(keySystem, configuration);\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\n\n            }).catch(function () {\n                if (++i < ksConfigurations.length) {\n                    requestKeySystemAccessInternal(ksConfigurations, i);\n                } else {\n                    eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied!'});\n                }\n            });\n        })(idx);\n    }\n\n    function closeKeySessionInternal(sessionToken) {\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case 'encrypted':\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, initData, sessionType) {\n\n        var token = { // Implements SessionToken\n            session: session,\n            initData: initData,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(Events.KEY_STATUSES_CHANGED, {data: this});\n                        break;\n\n                    case 'message':\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\n                        break;\n                }\n            },\n\n            getSessionID: function () {\n                return session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getSessionType: function () {\n                return sessionType;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(function () {\n            removeSession(token);\n            log('DRM: Session closed.  SessionID = ' + token.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        setServerCertificate: setServerCertificate,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default FactoryMaker.getClassFactory(ProtectionModel_21Jan2015);",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n\n    let instance,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (var i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE, {error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message});\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n\n                // Look for supported audio container/codecs\n                if (audios && audios.length !== 0) {\n                    supportedAudio = []; // Indicates that we have a requested audio config\n                    for (var audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                            supportedAudio.push(audios[audioIdx]);\n                        }\n                    }\n                }\n\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: new KeySystemAccess(ks, ksConfig)});\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(ksAccess) {\n        try {\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n            keySystem = ksAccess.keySystem;\n            keySystemAccess = ksAccess;\n            if (videoElement) {\n                setMediaKeys();\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n        } catch (error) {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        }\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        var capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities !== null && keySystemAccess.ksConfiguration.videoCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities !== null && keySystemAccess.ksConfiguration.audioCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n\n        if (capabilities === null)\n          throw new Error('Can not create sessions for unknown content types.');\n\n        var contentType = capabilities.contentType;\n        var session = mediaKeys.createSession(contentType, new Uint8Array(initData));\n        var sessionToken = createSessionToken(session, initData);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n        eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        var boundDoSetKeys = null;\n        var doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, initData) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            initData: initData,\n\n            getSessionID: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.error:\n                        var errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(Events.KEY_ERROR, { data: new KeyError(this, errorStr) });\n                        break;\n                    case api.message:\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        log('DRM: Key added.');\n                        eventBus.trigger(Events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        log('DRM: Session closed.  SessionID = ' + this.getSessionID());\n                        eventBus.trigger(Events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default FactoryMaker.getClassFactory(ProtectionModel_3Feb2014);\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url, message/*, messageType*/) {\n        // Build ClearKey server query string\n        var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n        url += '/?';\n        for (var i = 0; i < jsonMsg.kids.length; i++) {\n            url += jsonMsg.kids[i] + '&';\n        }\n        url = url.substring(0, url.length - 1);\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'GET';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        var keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            var keypair = serverResponse.keys[i];\n            var keyid = keypair.kid.replace(/=/g, '');\n            var key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default FactoryMaker.getSingletonFactory(ClearKey);",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport BASE64 from '../../../../externals/base64';\n\nfunction DRMToday() {\n\n    const keySystems = {\n        'com.widevine.alpha': {\n            responseType: 'json',\n            getLicenseMessage: function (response) {\n                return BASE64.decodeArray(response.license);\n            },\n            getErrorResponse: function (response) {\n                return response;\n            }\n        },\n        'com.microsoft.playready': {\n            responseType: 'arraybuffer',\n            getLicenseMessage: function (response) {\n                return response;\n            },\n            getErrorResponse: function (response) {\n                return String.fromCharCode.apply(null, new Uint8Array(response));\n            }\n        }\n    };\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default FactoryMaker.getSingletonFactory(DRMToday);",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction PlayReady() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default FactoryMaker.getSingletonFactory(PlayReady);",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction Widevine() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nWidevine.__dashjs_factory_name = 'Widevine';\nexport default FactoryMaker.getSingletonFactory(Widevine);",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\n *  type\n * @ignore\n */\nclass ClearKeyKeySet {\n    /**\n     * @param {Array.<KeyPair>} keyPairs\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\n     * or 'temporary'.  Can also be null or undefined.\n     * @class\n     * @ignore\n     */\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        var i;\n        var numKeys = this.keyPairs.length;\n        var jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            var key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        var jwkString = JSON.stringify(jwk);\n        var len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        var buf = new ArrayBuffer(len);\n        var bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc EME-independent KeyError\n * @ignore\n */\nclass KeyError {\n    /**\n     * @param {Object} sessionToken the key session to which this error is associated\n     * @param {string} errorString an informational error message\n     * @class\n     * @deprecated Newest versions of EME APIs will not use this error object\n     */\n    constructor(sessionToken, errorString) {\n        this.sessionToken = sessionToken;\n        this.error = errorString;\n    }\n}\n\nexport default KeyError;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc EME-independent KeyMessage\n * @ignore\n */\nclass KeyMessage {\n    /**\n     * @param {SessionToken} sessionToken the session\n     * to which the key message is associated\n     * @param {ArrayBuffer} message the key message\n     * @param {string} defaultURL license acquisition URL provided by the CDM\n     * @param {string} messageType Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @class\n     */\n    constructor(sessionToken, message, defaultURL, messageType) {\n        this.sessionToken = sessionToken;\n        this.message = message;\n        this.defaultURL = defaultURL;\n        this.messageType = messageType ? messageType : 'license-request';\n    }\n}\n\nexport default KeyMessage;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\n * @ignore\n */\nclass KeyPair {\n    /**\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\n     * @class\n     * @ignore\n     */\n    constructor(keyID, key) {\n        this.keyID = keyID;\n        this.key = key;\n    }\n}\n\nexport default KeyPair;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Creates a new key system access token.  Represents a valid key system for\n * given piece of content and key system requirements.  Used to initialize license\n * acquisition operations.\n * @ignore\n */\nclass KeySystemAccess {\n    /**\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\n     * @param {KeySystemConfiguration} ksConfiguration the\n     * subset of configurations passed to the key system access request that are supported\n     * by this user agent\n     * @class\n     * @ignore\n     */\n    constructor(keySystem, ksConfiguration) {\n        this.keySystem = keySystem;\n        this.ksConfiguration = ksConfiguration;\n    }\n}\n\nexport default KeySystemAccess;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Represents a set of configurations that describe the capabilities desired for\n *  support by a given CDM\n * @ignore\n */\nclass KeySystemConfiguration {\n    /**\n     * @param {Array.<MediaCapability>} audioCapabilities array of\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {Array.<MediaCapability>} videoCapabilities array of\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n     * One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {string} persistentState desired support for persistent storage of\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {Array.<string>} sessionTypes List of session types that must\n     * be supported by the key system\n     * @class\n     */\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        this.audioCapabilities = audioCapabilities;\n        this.videoCapabilities = videoCapabilities;\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc A media capability\n * @ignore\n */\nclass MediaCapability {\n    /**\n     * @param {string} contentType MIME type and codecs (RFC6386)\n     * @param {string} robustness\n     * @class\n     * @ignore\n     */\n    constructor(contentType, robustness) {\n        this.contentType = contentType;\n        this.robustness = robustness;\n    }\n}\n\nexport default MediaCapability;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc NeedKey\n * @ignore\n */\nclass NeedKey {\n    /**\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {string} initDataType initialization data type\n     * @class\n     */\n    constructor(initData, initDataType) {\n        this.initData = initData;\n        this.initDataType = initDataType;\n    }\n}\n\nexport default NeedKey;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\n\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\n\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\n\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    // \"mediasource\"|\"mediakeys\"\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\n    function manifestError(message, id, manifest, err) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest, event: err}});\n    }\n\n    // {message: '', id: 'parse', cc: ''}\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\n\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\n\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\n\nexport default factory;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Error {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default Error;"
  ]
}